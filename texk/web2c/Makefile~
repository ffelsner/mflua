# $Id: Makefile.in 10296 2008-08-12 23:46:59Z karl $
# Makefile.aux. Generated from Makefile.in by configure.
# Makefile.  Generated from Makefile.aux by configure.
# Makefile for web2c --kb@mail.tug.org. Public domain.
version = 7.5.7

# This makefile uses static rules with many targets (to be compatible to
# non-gnu make) and will not work correctly when parallelized.
# So we switch off parallel makes with gnu make.
.NOTPARALLEL:

# These lines define the memory dumps that fmts/bases/mems will make and
# install-fmts/install-bases/install-mems will install.
# See the Formats node in doc/web2c.texi for more details.
fmts = olatex.fmt # amstex.fmt eplain.fmt texinfo.fmt
efmts = latex.fmt
pdffmts = pdfolatex.fmt
pdfefmts = pdflatex.fmt
afmts = lamed.fmt
ofmts = lambda.fmt
eofmts = elambda.fmt
bases = # no good reason to build cmmf.base.
mems =  # mfplain.mem is probably not generally useful.

# The name of the file that defines your local devices for Metafont.
# (Only relevant during `make bases'.)  I recommend `modes.mf', which
# defines all known modes, plus useful definitions for all fonts.  It's
# available from ftp://ftp.tug.org/tex/modes.mf, among other places.
localmodes = modes

# paths.mk -- installation directories.
# $Id: paths.mk 10296 2008-08-12 23:46:59Z karl $

# Do not change prefix and exec_prefix in Makefile.in!
# configure doesn't propagate the change to the other Makefiles.
# Instead, give the -prefix/-exec-prefix options to configure.
# (See kpathsea/INSTALL for more details.) This is arguably
# a bug, but it's not likely to change soon.
prefix = /usr/local
exec_prefix = ${prefix}

# Architecture-dependent executables.
bindir = ${exec_prefix}/bin

# Architecture-independent executables.
scriptdir = $(bindir)

# Architecture-dependent files, such as lib*.a files.
libdir = ${exec_prefix}/lib

# Architecture-independent files.
datarootdir = ${prefix}/share
datadir = ${datarootdir}

# Header files.
includedir = ${prefix}/include

# GNU .info* files.
infodir = ${datarootdir}/info

# Unix man pages.
manext = 1
mandir = ${datarootdir}/man
man1dir = $(mandir)/man$(manext)
man5dir = $(mandir)/man5

# modifiable single-machine data.
localstatedir = ${prefix}/var

# read-only single-machine data (configuration).
sysconfdir = ${prefix}/etc

# executables that other programs run.
libexecdir = ${exec_prefix}/libexec


# TeX system-specific directories. Not all of the following are relevant
# for all programs, but it seems cleaner to collect everything in one place.

# The default paths are in kpathsea/texmf.cnf. Passing all the paths to
# sub-makes can make the arg list too long.  If you make
# changes below, you will have to make the corresponding changes to
# texmf.cnf yourself.

# The root of the main tree.
texmf = ${prefix}/share/texmf

# The directory used by varfonts.
vartexfonts = /var/tmp/texfonts

# Regular input files.
texinputdir = $(texmf)/tex
mfinputdir = $(texmf)/metafont
mpinputdir = $(texmf)/metapost
mftinputdir = $(texmf)/mft

# dvips's epsf.tex, rotate.tex, etc. get installed here;
# ditto for dvilj's fonts support.
dvips_plain_macrodir = $(texinputdir)/plain/dvips
dvilj_latex2e_macrodir = $(texinputdir)/latex/dvilj

# mktex.cnf, texmf.cnf, etc.
web2cdir = $(texmf)/web2c

# The top-level font directory.
fontdir = $(texmf)/fonts

# Memory dumps (.fmt/.base/.mem).
fmtdir = $(web2cdir)/tex
basedir = $(web2cdir)/metafont
memdir = $(web2cdir)/metapost

# Pool files.
texpooldir = $(web2cdir)
mfpooldir = $(texpooldir)
mppooldir = $(texpooldir)

# Where the .map files from fontname are installed.
fontnamedir = $(texmf)/fontname

# For dvips configuration files, psfonts.map, etc.
dvipsdir = $(texmf)/dvips

# For dvips .pro files, gsftopk's render.ps, etc.
psheaderdir = $(dvipsdir)

# If a font can't be found close enough to its stated size, we look for
# each of these sizes in the order given.  This colon-separated list is
# overridden by the envvar TEXSIZES, and by a program-specific variable
# (e.g., XDVISIZES), and perhaps by a config file (e.g., in dvips).
# This list must be sorted in ascending order.
default_texsizes = 600

# End of paths.mk.

# Used for triptrap.
DIFF = diff
DIFFFLAGS =

.SUFFIXES: # get rid of .p.o
# common.mk -- used by all Makefiles.
SHELL = /bin/sh

top_srcdir = /opt/luatex/metafont-2.718281/texk/web2c
srcdir = /opt/luatex/metafont-2.718281/texk/web2c
VPATH = /opt/luatex/metafont-2.718281/texk/web2c

CC = gcc
CFLAGS = -g -O2 $(XCFLAGS)
CPPFLAGS =  $(XCPPFLAGS)
DEFS = -DHAVE_CONFIG_H $(XDEFS)
LDFLAGS =  $(XLDFLAGS)

# Kpathsea needs this for compiling, programs need it for linking.
LIBTOOL = $(SHELL) $(kpathsea_parent)/libtool

# You can change [X]CPPFLAGS, [X]CFLAGS, or [X]DEFS, but
# please don't change ALL_CPPFLAGS or ALL_CFLAGS.
# prog_cflags is set by subdirectories of web2c.
ALL_CPPFLAGS = $(DEFS) -I. -I$(srcdir) -I$(kpathsea_parent) \
  -I$(kpathsea_srcdir_parent) $(prog_cflags) $(CPPFLAGS)
ALL_CFLAGS = $(ALL_CPPFLAGS) $(CFLAGS)
ALL_CXXFLAGS = $(ALL_CPPFLAGS) $(CXXFLAGS)
compile = $(CC) $(ALL_CFLAGS)

.SUFFIXES:
.SUFFIXES: .c .o .lo # in case the suffix list has been cleared, e.g., by web2c
.c.o:
	$(compile) -c $< -o $@

# Installation.
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_LIBTOOL_LIBS = $(LIBTOOL) --mode=install $(INSTALL_DATA)
INSTALL_LIBTOOL_PROG = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)

# Creating (symbolic) links.
LN = ln -s

# Removing files.
RM = rm -f

# Uninstall.
UNINSTALL = $(RM)
UNINSTALL_PROGRAM = $(RM)
UNINSTALL_SCRIPT = $(RM)
UNINSTALL_DATA = $(RM)
UNINSTALL_LIBTOOL_LIBS = $(LIBTOOL) --mode=uninstall $(RM)
UNINSTALL_LIBTOOL_PROG = $(LIBTOOL) --mode=uninstall $(RM)

# We use these for many things.
kpathsea_parent = ..
kpathsea_dir = $(kpathsea_parent)/kpathsea
kpathsea_srcdir_parent = $(top_srcdir)/..
kpathsea_srcdir = $(kpathsea_srcdir_parent)/kpathsea
kpathsea = $(kpathsea_dir)/libkpathsea.la

#M#ifeq ($(CC), gcc)
#M#XDEFS = -Wpointer-arith $(warn_more)
#M#CFLAGS = -g $(XCFLAGS)
#M#endif
# End of common.mk.
# programs.mk -- used by Makefiles for executables only.

# Don't include $(CFLAGS), since ld -g under Linux forces
# static libraries, e.g., libc.a and libX*.a.
LDFLAGS =  $(XLDFLAGS)

# proglib is for web2c; 
# XLOADLIBES is for the installer.
LIBS = -lm 
LOADLIBES = $(proglib) $(kpathsea) $(LIBS) $(XLOADLIBES)

# May as well separate linking from compiling, just in case.
CCLD = $(CC)
link_command = $(CCLD) -o $@ $(LDFLAGS) 

# When we link with Kpathsea, have to take account that it might be a
# shared library, etc.
kpathsea_link = $(LIBTOOL) --mode=link $(link_command)
# End of programs.mk.

XCPPFLAGS = $(PDFXCPPFLAGS)

CXX = g++
CXXLD = $(CXX)
cxx_link_command = $(CXXLD) -o $@ $(LDFLAGS)
kpathsea_cxx_link = $(LIBTOOL) --mode=link $(cxx_link_command)

#M#ifeq ($(CC), gcc)
#M#XDEFS = -Wimplicit -Wreturn-type -Wcomment -Wformat
#M#endif

# Make `#include <X11/...>' and `-lX...' work.
# This matches xdvik.
# wlibs is substituted by web2c's configure, LIBS by general configure
# routines, and the others by AC_PATH_XTRA.
# All the x_... variables will be empty if we aren't supporting X.
x_cppflags = 
x_ldflags = 
x_pre_libs = 
x_extra_libs = 
x_tool_libs = 
x_ext_lib = 
wlibs = 
# Follow the library order used in X11R6 itself:
#   -lXaw -lXmu -lXt -lSM -lICE -lXext -lX11 (some may not be present).
windowlink = $(windowlib) $(x_ldflags) $(x_tool_libs) $(x_pre_libs) $(x_ext_lib) $(wlibs) $(x_extra_libs)

# With --enable-ipc, TeX may need to link with -lsocket.
socketlibs = 

common_makeargs = $(MFLAGS) CC='$(CC)' CFLAGS='$(CFLAGS)' LDFLAGS='$(LDFLAGS)' $(XMAKEARGS)
window_makeargs = x_cppflags='$(x_cppflags)' $(common_makeargs)
install_makeargs = $(makevars) $(common_makeargs)

proglib = lib/lib.a
windowlib = window/window.a

# 
# The sh script that does the conversion.  The "." is the directory with
# native tools; we don't attempt cross-compiling a la luatex.  The
# $(native) variable is used in luatex.mk.
native = .
web2c = srcdir=$(srcdir) $(SHELL) $(srcdir)/web2c/convert $(native)

# We put this in the web2c directory for lack of a better place, but it
# is separate from (and simpler than) the actual web-to-C conversion programs.
makecpool = $(native)/web2c/makecpool

# Additional dependencies:
web2c_common = web2c/convert web2c/common.defines
web2c_programs = web2c/fixwrites web2c/splitup web2c/web2c $(makecpool)
web2c_texmf = $(web2c_common) $(web2c_programs) \
              web2c/texmf.defines web2c/coerce.h

# The helper programs:
TANGLEBOOT = ./tangleboot
CTANGLEBOOT = ./ctangleboot
TANGLE = ./tangle
CTANGLE = ./ctangle
TIE = ./tie

# Calling tangle
tangle = WEBINPUTS=.:$(srcdir) $(TANGLE)
ctangle = $(CTANGLE)
tie = $(TIE)

# The environment for making dumps.
# No need to specify TEXMF, as ../kpathsea/texmf.cnf should contain
# suitable absolute paths at this point.  Those are converted to
# SELFAUTO* paths on installation.
dumpenv = TEXMFCNF=../kpathsea

# Unfortunately, suffix rules can't have dependencies, or multiple
# targets, and we can't assume all makes supports pattern rules.
#.SUFFIXES: .p .c .ch .p
#.p.c: # really depends on $(web2c_programs), and generates .h.
#	$(web2c) $*
#.ch.p: # really depends on tangle; for mf/mp/tex, also generates .pool
#	./tangle $(srcdir)/$*.web $<

# These definitions have to come before the rules that expand them.
# The *{ini,[0-2]}.c files are created by splitup, run as part of convert.
# {mf,mp,tex}extra.c are created from lib/texmfmp.c, below.

# Prevent Make from deleting the intermediate forms.
.PRECIOUS: %.ch %.p %.c

tex = tex
mf = mf
#! mfn = mf-nowin
#  
default all: programs manpages doc/web2c.info 
check: dumps

bibtex: bibtex.o
	$(kpathsea_link) bibtex.o $(LOADLIBES)
bibtex.c bibtex.h: $(web2c_common) $(web2c_programs) web2c/cvtbib.sed bibtex.p
	$(web2c) bibtex
bibtex.p: tangle bibtex.web bibtex.ch
	$(tangle) bibtex bibtex
check: bibtex-check
bibtex-check: bibtex
	test -f tests/exampl.aux || \
	  cp $(srcdir)/tests/exampl.aux tests/exampl.aux
	TEXMFCNF=../kpathsea \
	  BSTINPUTS=$(srcdir)/tests \
	  BIBINPUTS=$(srcdir)/tests \
	  ./bibtex tests/exampl
clean:: bibtex-clean
bibtex-clean:
	$(LIBTOOL) --mode=clean rm -f bibtex
	rm -f bibtex.o bibtex.c bibtex.h bibtex.p
	rm -f tests/exampl.blg tests/exampl.bbl

ctie: ctie.o
	$(kpathsea_link) ctie.o $(LOADLIBES)
ctie.c: ctangle ctiedir/ctie.w ctiedir/ctie-k.ch
	CWEBINPUTS=$(srcdir)/ctiedir $(ctangle) ctie.w ctie-k.ch
clean:: ctie-clean
ctie-clean:
	$(LIBTOOL) --mode=clean rm -f ctie
	rm -f ctie.o ctie.c

cweave: cweave.o cweb.o
	$(kpathsea_link) cweave.o cweb.o $(LOADLIBES)
cweave.c: ctangle cwebdir/cweave.w cwebdir/cweav-w2c.ch
	CWEBINPUTS=$(srcdir)/cwebdir $(ctangle) cweave cweav-w2c
check: cweave-check
cweave-check: cweave
	CWEBINPUTS=$(srcdir)/cwebdir ./cweave common.w
clean:: cweave-clean
cweave-clean:
	$(LIBTOOL) --mode=clean rm -f cweave
	rm -f cweave.o cweave.c
	rm -f common.tex common.scn common.idx

dvicopy: dvicopy.o
	$(kpathsea_link) dvicopy.o $(LOADLIBES)
dvicopy.c dvicopy.h: $(web2c_common) $(web2c_programs) dvicopy.p
	$(web2c) dvicopy
dvicopy.p: tangle dvicopy.web dvicopy.ch
	$(tangle) dvicopy dvicopy
check: dvicopy-check
dvicopy-check: dvicopy
	TEXMFCNF=../kpathsea \
	  ./dvicopy $(srcdir)/tests/story tests/xstory.dvi
# Redirect stderr so the terminal output will end up in the log file.
	(TFMFONTS=$(srcdir)/tests VFFONTS=$(srcdir)/tests ./dvicopy \
	  <$(srcdir)/tests/pplr.dvi \
	  >tests/xpplr.dvi) 2>&1
clean:: dvicopy-clean
dvicopy-clean:
	$(LIBTOOL) --mode=clean rm -f dvicopy
	rm -f dvicopy.o dvicopy.c dvicopy.h dvicopy.p
	rm -f tests/xstory.dvi tests/xpplr.dvi

## dvitomp is a special case
# Makefile fragment for DVItoMP.
# $Id: dvitomp.mk,v 1.1 2005/06/21 16:03:15 olaf Exp $
#
# Public domain.
#
# This facilitates a separate development track for DVItoMP.

Makefile: dvitomp.mk

dvitomp: dvitomp.o
	$(kpathsea_link) dvitomp.o $(LOADLIBES)
dvitomp.c dvitomp.h: $(web2c_common) $(web2c_programs) dvitomp.p
	$(web2c) dvitomp
dvitomp.p: tangle dvitomp.web dvitomp.ch
	$(tangle) dvitomp dvitomp
check: dvitomp-check
dvitomp-check: dvitomp
	TEXMFCNF=../kpathsea \
	  ./dvitomp $(srcdir)/tests/story.dvi tests/xstory.mpx
	TFMFONTS=$(srcdir)/tests VFFONTS=$(srcdir)/tests: \
	  ./dvitomp $(srcdir)/tests/ptmr 
	mv ptmr.mpx tests/xptmr.mpx
clean:: dvitomp-clean
dvitomp-clean:
	$(LIBTOOL) --mode=clean rm -f dvitomp
	rm -f dvitomp.o dvitomp.c dvitomp.h dvitomp.p
	rm -f tests/xstory.mpx tests/xptmr.mpx
##

dvitype: dvitype.o
	$(kpathsea_link) dvitype.o $(LOADLIBES)
dvitype.c dvitype.h: $(web2c_common) $(web2c_programs) dvitype.p
	$(web2c) dvitype
dvitype.p: tangle dvitype.web dvitype.ch
	$(tangle) dvitype dvitype
check: dvitype-check
dvitype-check: dvitype
	./dvitype -show-opcodes $(srcdir)/tests/story >tests/xstory.dvityp
	./dvitype --p=\*.\*.2 $(srcdir)/tests/pagenum.dvi >tests/xpagenum.typ
clean:: dvitype-clean
dvitype-clean:
	$(LIBTOOL) --mode=clean rm -f dvitype
	rm -f dvitype.o dvitype.c dvitype.h dvitype.p
	rm -f tests/xstory.dvityp tests/xpagenum.typ

gftodvi: gftodvi.o
	$(kpathsea_link) gftodvi.o $(LOADLIBES)
gftodvi.c gftodvi.h: $(web2c_common) $(web2c_programs) gftodvi.p
	$(web2c) gftodvi
gftodvi.p: tangle gftodvi.web gftodvi.ch
	$(tangle) gftodvi gftodvi
check: gftodvi-check
gftodvi-check: gftodvi
	TFMFONTS=$(srcdir)/tests ./gftodvi -verbose \
	  $(srcdir)/tests/cmr10.600gf
	mv cmr10.dvi tests/xcmr10.dvi
clean:: gftodvi-clean
gftodvi-clean:
	$(LIBTOOL) --mode=clean rm -f gftodvi
	rm -f gftodvi.o gftodvi.c gftodvi.h gftodvi.p
	rm -f tests/xcmr10.dvi

gftopk: gftopk.o
	$(kpathsea_link) gftopk.o $(LOADLIBES)
gftopk.c gftopk.h: $(web2c_common) $(web2c_programs) gftopk.p
	$(web2c) gftopk
gftopk.p: tangle gftopk.web gftopk.ch
	$(tangle) gftopk gftopk
check: gftopk-check
gftopk-check: gftopk
	./gftopk -verbose $(srcdir)/tests/cmr10.600gf tests/xcmr10.pk
	./gftopk $(srcdir)/tests/cmr10.600gf cmr10.pk && rm cmr10.pk
clean:: gftopk-clean
gftopk-clean:
	$(LIBTOOL) --mode=clean rm -f gftopk
	rm -f gftopk.o gftopk.c gftopk.h gftopk.p
	rm -f tests/xcmr10.pk

gftype: gftype.o
	$(kpathsea_link) gftype.o $(LOADLIBES)
gftype.c gftype.h: $(web2c_common) $(web2c_programs) gftype.p
	$(web2c) gftype
gftype.p: tangle gftype.web gftype.ch
	$(tangle) gftype gftype
check: gftype-check
gftype-check: gftype
	./gftype $(srcdir)/tests/cmr10.600gf >tests/xcmr10.gft1
	./gftype -m -i $(srcdir)/tests/cmr10.600gf >tests/xcmr10.gft2
clean:: gftype-clean
gftype-clean:
	$(LIBTOOL) --mode=clean rm -f gftype
	rm -f gftype.o gftype.c gftype.h gftype.p
	rm -f tests/xcmr10.gft1 tests/xcmr10.gft2

mft: mft.o
	$(kpathsea_link) mft.o $(LOADLIBES)
mft.c mft.h: $(web2c_common) $(web2c_programs) mft.p
	$(web2c) mft
mft.p: tangle mft.web mft.ch
	$(tangle) mft mft
check: mft-check
mft-check: mft
	./mft $(srcdir)/tests/io; mv io.tex tests/io.tex
clean:: mft-clean
mft-clean:
	$(LIBTOOL) --mode=clean rm -f mft
	rm -f mft.o mft.c mft.h mft.p
	rm -f tests/io.tex

patgen: patgen.o
	$(kpathsea_link) patgen.o $(LOADLIBES)
patgen.c patgen.h: $(web2c_common) $(web2c_programs) patgen.p
	$(web2c) patgen
patgen.p: tangle patgen.web patgen.ch
	$(tangle) patgen patgen
check: patgen-check
patgen-check: patgen
	./patgen $(srcdir)/tests/dict $(srcdir)/tests/patterns tests/xpatout \
	   $(srcdir)/tests/translate <$(srcdir)/tests/patgen.in
clean:: patgen-clean
patgen-clean:
	$(LIBTOOL) --mode=clean rm -f patgen
	rm -f patgen.o patgen.c patgen.h patgen.p
	rm -f tests/xpatout pattmp.4

pktogf: pktogf.o
	$(kpathsea_link) pktogf.o $(LOADLIBES)
pktogf.c pktogf.h: $(web2c_common) $(web2c_programs) pktogf.p
	$(web2c) pktogf
pktogf.p: tangle pktogf.web pktogf.ch
	$(tangle) pktogf pktogf
check: pktogf-check
pktogf-check: pktogf
	./pktogf -verbose $(srcdir)/tests/cmr10.pk tests/xcmr10.600gf
	./pktogf $(srcdir)/tests/cmr10.pk && rm cmr10.gf
clean:: pktogf-clean
pktogf-clean:
	$(LIBTOOL) --mode=clean rm -f pktogf
	rm -f pktogf.o pktogf.c pktogf.h pktogf.p
	rm -f tests/xcmr10.600gf

pktype: pktype.o
	$(kpathsea_link) pktype.o $(LOADLIBES)
pktype.c pktype.h: $(web2c_common) $(web2c_programs) pktype.p
	$(web2c) pktype
pktype.p: tangle pktype.web pktype.ch
	$(tangle) pktype pktype
check: pktype-check
pktype-check: pktype
	./pktype $(srcdir)/tests/cmr10.pk >tests/xcmr10.pktyp
clean:: pktype-clean
pktype-clean:
	$(LIBTOOL) --mode=clean rm -f pktype
	rm -f pktype.o pktype.c pktype.h pktype.p
	rm -f tests/xcmr10.pktyp

pltotf: pltotf.o
	$(kpathsea_link) pltotf.o $(LOADLIBES)
pltotf.c pltotf.h: $(web2c_common) $(web2c_programs) pltotf.p
	$(web2c) pltotf
pltotf.p: tangle pltotf.web pltotf.ch
	$(tangle) pltotf pltotf
check: pltotf-check
pltotf-check: pltotf
	./pltotf -verbose $(srcdir)/tests/cmr10 tests/xcmr10
clean:: pltotf-clean
pltotf-clean:
	$(LIBTOOL) --mode=clean rm -f pltotf
	rm -f pltotf.o pltotf.c pltotf.h pltotf.p
	rm -f tests/xcmr10.tfm

pooltype: pooltype.o
	$(kpathsea_link) pooltype.o $(LOADLIBES)
pooltype.c pooltype.h: $(web2c_common) $(web2c_programs) pooltype.p
	$(web2c) pooltype
pooltype.p: tangle pooltype.web pooltype.ch
	$(tangle) pooltype pooltype
check: pooltype-check
pooltype-check: tex.pool
pooltype-check: pooltype
	./pooltype tex.pool >tests/xtexpool.typ
clean:: pooltype-clean
pooltype-clean:
	$(LIBTOOL) --mode=clean rm -f pooltype
	rm -f pooltype.o pooltype.c pooltype.h pooltype.p
	rm -f tests/xtexpool.typ

tie: tie.o
	$(kpathsea_link) tie.o $(LOADLIBES)
tie.c: ctangle tiedir/tie.w tiedir/tie-w2c.ch
	CWEBINPUTS=$(srcdir)/tiedir $(ctangle) tie.w tie-w2c.ch
clean:: tie-clean
tie-clean:
	$(LIBTOOL) --mode=clean rm -f tie
	rm -f tie.o tie.c

tftopl: tftopl.o
	$(kpathsea_link) tftopl.o $(LOADLIBES)
tftopl.c tftopl.h: $(web2c_common) $(web2c_programs) tftopl.p
	$(web2c) tftopl
tftopl.p: tangle tftopl.web tftopl.ch
	$(tangle) tftopl tftopl
check: tftopl-check
tftopl-check: tftopl
	./tftopl -verbose $(srcdir)/tests/cmr10 tests/xcmr10
clean:: tftopl-clean
tftopl-clean:
	$(LIBTOOL) --mode=clean rm -f tftopl
	rm -f tftopl.o tftopl.c tftopl.h tftopl.p
	rm -f tests/xcmr10.pl

vftovp: vftovp.o
	$(kpathsea_link) vftovp.o $(LOADLIBES)
vftovp.c vftovp.h: $(web2c_common) $(web2c_programs) vftovp.p
	$(web2c) vftovp
vftovp.p: tangle vftovp.web vftovp.ch
	$(tangle) vftovp vftovp
check: vftovp-check
vftovp-check: vftovp
	TFMFONTS=$(srcdir)/tests ./vftovp -verbose $(srcdir)/tests/ptmr ptmr tests/xptmr
clean:: vftovp-clean
vftovp-clean:
	$(LIBTOOL) --mode=clean rm -f vftovp
	rm -f vftop.o vftovp.c vftovp.h vftovp.p
	rm -f tests/xptmr.vpl

vptovf: vptovf.o
	$(kpathsea_link) vptovf.o $(LOADLIBES)
vptovf.c vptovf.h: $(web2c_common) $(web2c_programs) vptovf.p
	$(web2c) vptovf
vptovf.p: tangle vptovf.web vptovf.ch
	$(tangle) vptovf vptovf
check: vptovf-check
vptovf-check: vptovf
	./vptovf $(srcdir)/tests/ptmr tests/xptmr tests/xptmr
clean:: vptovf-clean
vptovf-clean:
	$(LIBTOOL) --mode=clean rm -f vptovf
	rm -f vptovf.o vptovf.c vptovf.h vptovf.p
	rm -f tests/xptmr.vf tests/xptmr.tfm

weave: weave.o
	$(kpathsea_link) weave.o $(LOADLIBES)
weave.c weave.h: $(web2c_common) $(web2c_programs) weave.p
	$(web2c) weave
weave.p: tangle weave.web weave.ch
	$(tangle) weave weave
check: weave-check
weave-check: weave
	./weave $(srcdir)/pooltype
clean:: weave-clean
weave-clean:
	$(LIBTOOL) --mode=clean rm -f weave
	rm -f weave.o weave.c weave.h weave.p
	rm -f pooltype.tex

# 
# Defines that are common to the texmf programs.

triptrap: trip trap mptrap
testdir = $(srcdir)/triptrap
testenv = TEXMFCNF=$(testdir)
dvitype_args = -output-level=2 -dpi=72.27 -page-start='*.*.*.*.*.*.*.*.*.*'

# 
# Metafont
# mflua
MFLIBLUADIR=../../libs/mflua51
MFLIBLUASRCDIR=$(srcdir)/mfluadir/lua51
MFLIBLUADEP=$(MFLIBLUADIR)/liblua.a
## linux wants -ldl
##mfluatarget=posix 
mfluatarget=linux
ifeq ($(target),i386-mingw32)
  ifeq ($(host),i386-linux)
    mfluatarget = mingwcross
  else
    luatarget = mingw
  endif
else
ifeq ($(target),i386-linux)
  mfluatarget = linux
endif
endif
$(MFLIBLUADEP):
	mkdir -p $(MFLIBLUADIR) && cd $(MFLIBLUADIR) && cp -f $(MFLIBLUASRCDIR)/* . && $(MAKE) $(mfluatarget)
mf_c  = mfini.c mf0.c mf1.c
mf_o  = mfini.o mf0.o mf1.o mf-pool.o mfextra.o
mfn_o = mfini.o mf0.o mf1.o mf-pool.o mfnowin.o
mf: $(mf_o) $(windowlib) $(MFLIBLUADEP)
	$(kpathsea_link) $(mf_o) $(windowlink)  $(MFLIBLUADEP) -ldl $(LOADLIBES)
mf-nowin: $(mfn_o) window/trap.o
	$(kpathsea_link) $(mfn_o) window/trap.o $(LOADLIBES)
mfnowin.o: mfnowin.c
	$(compile) -DMFNOWIN -c $< -o $@
$(mf_c) mfcoerce.h mfd.h: mf.p $(web2c_texmf) web2c/cvtmf1.sed web2c/cvtmf2.sed
	$(web2c) mf
mfextra.c: lib/texmfmp.c
	sed s/TEX-OR-MF-OR-MP/mf/ $(srcdir)/lib/texmfmp.c >$@
mfnowin.c: lib/texmfmp.c
	sed s/TEX-OR-MF-OR-MP/mf/ $(srcdir)/lib/texmfmp.c >$@
mf.p mf.pool: tangle mf.web mf-final.ch
	$(tangle) $(srcdir)/mf.web mf-final.ch
mf-final.ch: $(TIE) mf.web mf.ch mf-binpool.ch
	$(TIE) -c $@ $(srcdir)/mf.web $(srcdir)/mf.ch $(srcdir)/mf-binpool.ch
check: mf-check
mf-check: trap mf.base
	./mf --progname=mf '&./mf \tracingstats:=1; end.'
	./mf --progname=mf $(srcdir)/tests/online
	./mf --progname=mf $(srcdir)/tests/one.two
	./mf --progname=mf $(srcdir)/tests/uno.dos
clean:: mf-clean
mf-clean: trap-clean
	$(LIBTOOL) --mode=clean rm -f mf
	$(LIBTOOL) --mode=clean rm -f mf-nowin
	rm -f $(mf_c) mfcoerce.h mfd.h mf.p mf.pool
	rm -f $(mf_o) mfextra.c
	rm -f $(mfn_o) mfnowin.c
	rm -f mf.base mf.log
	rm -f mfput.log online.2602gf online.log one.two.log uno.log

# Can't run trap and mptrap in parallel, because both write trap.{log,tfm}.
trap: mf tftopl gftype trap-clean
	@echo ">>> See $(testdir)/mftrap.diffs for example of acceptable diffs." >&2
	$(LN) $(testdir)/trap.mf . # get same filename in log
	-$(SHELL) -c '$(testenv) ./mf --progname=inimf <$(testdir)/mftrap1.in >mftrapin.fot'
	mv trap.log mftrapin.log
	-diff $(testdir)/mftrapin.log mftrapin.log
	-$(SHELL) -c '$(testenv) ./mf --progname=inimf <$(testdir)/mftrap2.in >mftrap.fot'
	mv trap.log mftrap.log
	mv trap.tfm mftrap.tfm
	-diff $(testdir)/mftrap.fot mftrap.fot
	-diff $(testdir)/mftrap.log mftrap.log
	./tftopl ./mftrap.tfm mftrap.pl
	-diff $(testdir)/mftrap.pl mftrap.pl
	$(SHELL) -c '$(testenv) ./gftype -m -i ./trap.72270gf >trap.typ'
	-diff $(testdir)/trap.typ trap.typ

trap-clean:
	rm -f trap.mf trap.base
	rm -f mftrapin.fot mftrapin.log
	rm -f mftrap.fot mftrap.log mftrap.tfm
	rm -f mftrap.pl trap.72270gf trap.typ
# 
# MetaPost
## mpostlib.mk - Makefile fragment for libraries used by mpost
# Public domain.

# Include dependencies to get the built if we don't do make
# from the top-level directory.

Makefile: mpdir/mpostlib.mk

# libmpost 
mpostlib = mpdir/libmpost.a
mpostlib_sources = $(srcdir)/mpdir/*.c $(srcdir)/mpdir/*.h

mpdir/libmpost.a: $(mpostlib_sources)
	cd mpdir && $(MAKE) $(common_makeargs) libmpost.a

# Convenience variables.
mpostlibs = $(mpostlib)
mpostlibsdep = $(mpostlib) $(makecpool)

## end of mpostlib.mk - Makefile fragment for libraries used by mpost

# Makefile fragment for MetaPost.
# $Id: metapost.mk,v 1.15 2005/07/04 07:51:41 taco Exp $
#
# Public domain. 
#
# This facilitates a separate development track for MetaPost.

Makefile: metapost.mk

mpost = mpost
metapost = $(mpost) dvitomp
mpostdir = mpdir

# mpware is the subdirectory.
mpware = mpware
mpware_programs = mpware/dmp mpware/makempx mpware/mpto mpware/newer
mpware_sources = mpware/dmp.c mpware/makempx.in mpware/mpto.c mpware/newer.c

# mpost

mp_c = mpini.c mp0.c mp1.c mp2.c
mp_o = mpini.o mp0.o mp1.o mp2.o mpextra.o mp-loadpool.o

mp-loadpool.c: mp.pool $(makecpool)
	$(makecpool) mp.pool mpdir/mplib.h >$@ || rm -f $@
# mpostlibsdep also includes makecpool
mpost: $(mp_o) $(mpostlibsdep)
	$(kpathsea_link) $(mp_o) $(mpostlibs) $(LOADLIBES)
$(mp_c) mpcoerce.h mpd.h: mp.p $(web2c_texmf) $(srcdir)/$(mpostdir)/mp.defines  web2c/cvtmf1.sed web2c/cvtmf2.sed
	$(web2c) mp
mpextra.c: lib/texmfmp.c
	sed s/TEX-OR-MF-OR-MP/mp/ $(srcdir)/lib/texmfmp.c >$@
mp.p mp.pool: tie tangle mp.web mp.ch
	$(tangle) $(srcdir)/mp.web $(srcdir)/mp.ch
check: mpost-check
mpost-check: mptrap mpost.mem $(mpware)
	./mpost --progname=mpost '&./mpost \tracingstats:=1; end.'
	TEXMFCNF=../kpathsea \
	  MAKEMPX_BINDIR=`pwd`:`pwd`/mpware MPXCOMMAND=mpware/makempx \
	  ./mpost --progname=mpost $(srcdir)/tests/mptest
	./mpost --progname=mpost $(srcdir)/tests/one.two
	./mpost --progname=mpost $(srcdir)/tests/uno.dos
clean:: mpost-clean
mpost-clean: mptrap-clean
	$(LIBTOOL) --mode=clean rm -f mpost
	rm -f $(mp_o) $(mp_c) mpextra.c mpcoerce.h mpd.h mp.p mp.pool
	rm -f mpost.mem mpost.log
	rm -f mpout.log mptest.log one.two.log uno.log

# Can't run trap and mptrap in parallel, because both write trap.{log,tfm}.
mptrap: mpost pltotf tftopl mptrap-clean
	@echo ">>> See $(testdir)/mptrap.diffs for example of acceptable diffs." >&2
	$(LN) $(testdir)/mtrap.mp . # get same filename in log
	./pltotf $(testdir)/trapf.pl trapf.tfm
	-$(SHELL) -c '$(testenv) ./mpost --progname=inimpost mtrap'
	-diff $(testdir)/mtrap.log mtrap.log
	-diff $(testdir)/mtrap.0 mtrap.0
	-diff $(testdir)/mtrap.1 mtrap.1
	-diff $(testdir)/writeo writeo
	-diff $(testdir)/writeo.2 writeo.2
	$(LN) $(testdir)/trap.mp .
	$(LN) $(testdir)/trap.mpx .
	-$(SHELL) -c '$(testenv) ./mpost --progname=inimpost <$(testdir)/mptrap1.in >mptrapin.fot'
	mv trap.log mptrapin.log
	-diff $(testdir)/mptrapin.log mptrapin.log
# Must run inimp or font_name[null_font] is not initialized, leading to diffs.
	-$(SHELL) -c '$(testenv) ./mpost --progname=inimpost <$(testdir)/mptrap2.in >mptrap.fot'
	mv trap.log mptrap.log
	mv trap.tfm mptrap.tfm
	-diff $(testdir)/mptrap.fot mptrap.fot
	-diff $(testdir)/mptrap.log mptrap.log
	-diff $(testdir)/trap.5 trap.5
	-diff $(testdir)/trap.6 trap.6
	-diff $(testdir)/trap.148 trap.148
	-diff $(testdir)/trap.149 trap.149
	-diff $(testdir)/trap.150 trap.150
	-diff $(testdir)/trap.151 trap.151
	-diff $(testdir)/trap.197 trap.197
	-diff $(testdir)/trap.200 trap.200
	./tftopl ./mptrap.tfm mptrap.pl
	-diff $(testdir)/mptrap.pl mptrap.pl

mptrap-clean:
	rm -f mtrap.mp mtrap.mem trapf.tfm
	rm -f mtrap.log mtrap.0 mtrap.1 writeo writeo.log writeo.2
	rm -f trap.mp trap.mpx mptrapin.fot mptrapin.log
	rm -f mptrap.fot mptrap.log mptrap.tfm
	rm -f trap.ps trap.mem trap.0 trap.5 trap.6 trap.95 trap.96 trap.97
	rm -f trap.98 trap.99 trap.100 trap.101 trap.102 trap.103 trap.104
	rm -f trap.105 trap.106 trap.107 trap.108 trap.109 trap.148
	rm -f trap.149 trap.150 trap.151 trap.197 trap.200
	rm -f mptrap.pl


# mpware

# We put mpware (written directly in C) in a subdirectory.
$(mpware): $(mpware_programs)

$(mpware_programs): $(mpware_sources)
	cd $(mpware) && $(MAKE) $(common_makeargs)

install-programs: install-mpware-programs
install-mpware-programs: $(mpware_programs)
	cd $(mpware) && $(MAKE) $(install_makeargs) install-exec

mp-programs: $(metapost) $(mpware)
# 
# TeX
tex_c = texini.c tex0.c tex1.c tex2.c
tex_o = texini.o tex0.o tex1.o tex2.o tex-pool.o texextra.o
tex: $(tex_o)
	$(kpathsea_link) $(tex_o) $(socketlibs) $(LOADLIBES)
$(tex_c) texcoerce.h texd.h: tex.p $(web2c_texmf)
	$(web2c) tex
texextra.c: lib/texmfmp.c
	sed s/TEX-OR-MF-OR-MP/tex/ $(srcdir)/lib/texmfmp.c >$@
tex.p tex.pool: tangle tex.web tex-final.ch
	$(tangle) $(srcdir)/tex.web tex-final.ch
tex-final.ch: $(TIE) tex.web tex.ch tex-binpool.ch
	$(TIE) -c $@ $(srcdir)/tex.web $(srcdir)/tex.ch $(srcdir)/tex-binpool.ch

# tools to load pool for tex and mf.
#
tex-pool.c: tex.pool $(makecpool) tmf-pool.h
	$(makecpool) tex.pool $(srcdir)/tmf-pool.h >$@ || rm -f $@
mf-pool.c: mf.pool $(makecpool) tmf-pool.h
	$(makecpool) mf.pool $(srcdir)/tmf-pool.h >$@ || rm -f $@
mf-pool.o: mf-pool.c tmf-pool.h mfd.h
# we include mfd.h, so need lots more includes.
	$(CC) $(CFLAGS) -I. -I.. -I$(srcdir) -I$(srcdir)/.. -DMETA_FONT -c -o $@ mf-pool.c

check: tex-check
tex-check: trip tex.fmt
# Test truncation (but don't bother showing the warning msg).
	./tex --progname=tex --output-comment="`cat $(srcdir)/PROJECTS`" \
	    $(srcdir)/tests/hello 2>/dev/null \
	  && ./dvitype hello.dvi | grep olaf@infovore.xs4all.nl >/dev/null
# \openout should show up in \write's.
	./tex --progname=tex $(srcdir)/tests/openout && grep xfoo openout.log
# one.two.tex -> one.two.log
	./tex --progname=tex $(srcdir)/tests/one.two && ls -l one.two.log
# uno.dos -> uno.log
	./tex --progname=tex $(srcdir)/tests/uno.dos && ls -l uno.log
	./tex --progname=tex $(srcdir)/tests/just.texi && ls -l just.log
	-./tex --progname=tex $(srcdir)/tests/batch.tex
	./tex --progname=tex --shell $(srcdir)/tests/write18 | grep echo
	TEXMFCNF=../kpathsea \
	  ./tex --mltex --progname=initex --ini $(srcdir)/tests/mltextst
	-./tex </dev/null
	-PATH=`pwd`:$(kpathsea_dir):$(kpathsea_srcdir):$$PATH \
	  WEB2C=$(kpathsea_srcdir) TMPDIR=.. \
	  ./tex --progname=tex '\nonstopmode\font\foo=nonesuch\end'
clean:: tex-clean
tex-clean: trip-clean
	$(LIBTOOL) --mode=clean rm -f tex
	rm -f $(tex_o) $(tex_c) texextra.c texcoerce.h texd.h
	rm -f tex.p tex.pool
	rm -f tex.fmt tex.log
	rm -f hello.dvi hello.log xfoo.out openout.log on.two.log uno.log
	rm -f just.log batch.log write18.log mltextst.log texput.log
	rm -f missfont.log
	rm -rf tfm

trip: dvitype pltotf tftopl tex trip-clean
	@echo ">>> See $(testdir)/trip.diffs for example of acceptable diffs." >&2
	./pltotf $(testdir)/trip.pl trip.tfm
	./tftopl ./trip.tfm trip.pl
	-diff $(testdir)/trip.pl trip.pl
	$(LN) $(testdir)/trip.tex . # get same filename in log
	-$(SHELL) -c '$(testenv) ./tex --progname=initex --ini <$(testdir)/trip1.in >tripin.fot'
	mv trip.log tripin.log
	-diff $(testdir)/tripin.log tripin.log
# May as well test non-ini second time through.
	-$(SHELL) -c '$(testenv) ./tex --progname=tex <$(testdir)/trip2.in >trip.fot'
	-diff $(testdir)/trip.fot trip.fot
# We use $(DIFF) instead of `diff' only for those files where there
# might actually be legitimate numerical differences.
	-$(DIFF) $(DIFFFLAGS) $(testdir)/trip.log trip.log
	$(SHELL) -c '$(testenv) ./dvitype $(dvitype_args) trip.dvi >trip.typ'
	-$(DIFF) $(DIFFFLAGS) $(testdir)/trip.typ trip.typ

trip-clean:
	rm -f trip.tfm trip.pl trip.tex trip.fmt tripin.fot tripin.log
	rm -f trip.fot trip.log trip.dvi trip.typ tripos.tex 8terminal.tex
	rm -rf tfm
# 
# Helper makefile fragments for pdf*tex and luatex.
# $Id: libsluapdf.mk 8302 2008-05-23 14:32:37Z thoekwater $
# Libraries common to luatex and pdftex.
# Public domain.

# libz
ZLIBDIR=../../libs/zlib
ZLIBSRCDIR=$(srcdir)/$(ZLIBDIR)
ZLIBDEP = $(ZLIBDIR)/libz.a
LDZLIB = $(ZLIBDIR)/libz.a

$(ZLIBDIR)/libz.a: $(ZLIBSRCDIR)
	cd $(ZLIBDIR) && $(MAKE) $(common_makeargs) libz.a

# libpng
LIBPNGDIR=../../libs/libpng
LIBPNGSRCDIR=$(srcdir)/$(LIBPNGDIR)
LIBPNGDEP = $(LIBPNGDIR)/libpng.a
LDLIBPNG = $(LIBPNGDIR)/libpng.a

$(LIBPNGDIR)/libpng.a: $(LIBPNGSRCDIR)/*.c
	cd $(LIBPNGDIR) && $(MAKE) $(common_makeargs) libpng.a

# libxpdf
LIBXPDFDIR=../../libs/xpdf
LIBXPDFSRCDIR=$(srcdir)/$(LIBXPDFDIR)
LIBXPDFDEP = $(LIBXPDFDIR)/xpdf/libxpdf.a $(LIBXPDFDIR)/goo/libGoo.a $(LIBXPDFDIR)/fofi/libfofi.a
LDLIBXPDF = $(LIBXPDFDIR)/xpdf/libxpdf.a $(LIBXPDFDIR)/goo/libGoo.a $(LIBXPDFDIR)/fofi/libfofi.a

$(LIBXPDFDIR)/fofi/libfofi.a: $(LIBXPDFSRCDIR)/fofi/*.cc \
	$(LIBXPDFSRCDIR)/fofi/*.h
	cd $(LIBXPDFDIR)/fofi; $(MAKE) $(common_makeargs) libfofi.a
$(LIBXPDFDIR)/goo/libGoo.a: $(LIBXPDFSRCDIR)/goo/*.cc \
	$(LIBXPDFSRCDIR)/goo/*.c $(LIBXPDFSRCDIR)/goo/*.h
	cd $(LIBXPDFDIR)/goo; $(MAKE) $(common_makeargs) libGoo.a
$(LIBXPDFDIR)/xpdf/libxpdf.a: $(LIBXPDFSRCDIR)/xpdf/*.cc \
	$(LIBXPDFSRCDIR)/xpdf/*.h
	cd $(LIBXPDFDIR)/xpdf; $(MAKE) $(common_makeargs) libxpdf.a

# md5
LIBMD5DIR=../../libs/md5
LIBMD5SRCDIR=$(srcdir)/$(LIBMD5DIR)
LIBMD5DEP=$(LIBMD5DIR)/md5.o

$(LIBMD5DEP): $(LIBMD5SRCDIR)/md5.c $(LIBMD5SRCDIR)/md5.h
clean:: md5lib-clean
md5lib-clean:
	rm -f $(LIBMD5DEP)

# obsdcompat
LIBOBSDDIR=../../libs/obsdcompat
LIBOBSDSRCDIR=$(srcdir)/$(LIBOBSDDIR)
LIBOBSDDEP=$(LIBOBSDCOMPATDIR)/libopenbsd-compat.a
LDLIBOBSD=$(LIBOBSDCOMPATDIR)/libopenbsd-compat.a

$(LIBOBSDDIR)/libopenbsd-compat.a: $(LIBOBSDSRCDIR)/*.c $(LIBOBSDSRCDIR)/*.h
# common_makeargs = $(MFLAGS) CC='$(CC)' CFLAGS='$(CFLAGS)' LDFLAGS='$(LDFLAGS)' $(XMAKEARGS)
# CFLAGS setzt libopenbsd-compat selbst, nicht durchreichen!
	cd $(LIBOBSDDIR); $(MAKE) $(MFLAGS) $(XMAKEARGS) libopenbsd-compat.a

## pdftexlib.mk - Makefile fragment for libraries used by pdf[ex]tex.
# Public domain.

# The pdf*tex programs depend on a number of libraries.
# Include dependencies to get the built if we don't do make
# from the top-level directory.

Makefile: pdftexdir/pdftexlib.mk

# libpdf itself
pdflib = pdftexdir/libpdf.a
pdflib_sources = $(srcdir)/pdftexdir/*.c $(srcdir)/pdftexdir/*.cc \
	$(srcdir)/pdftexdir/*.h

pdftexdir/libpdf.a: $(pdflib_sources) pdftexdir/pdftexextra.h
	cd pdftexdir && $(MAKE) $(common_makeargs) libpdf.a


# Convenience variables.

pdftexlibs = $(pdflib) $(LDLIBPNG) $(LDZLIB) $(LDLIBXPDF) $(LIBMD5DEP) $(LDLIBOBSD)
pdftexlibsdep = $(pdflib) $(LIBPNGDEP) $(ZLIBDEP) $(LIBXPDFDEP) $(LIBMD5DEP) $(LIBOBSDDEP)

## end of pdftexlib.mk - Makefile fragment for libraries used by pdf[ex]tex.
## luatexlib.mk - Makefile fragment for libraries used by pdf[ex]tex.
# $Id: luatexlib.mk 8438 2008-05-31 23:09:36Z vvv $
# Public domain.

# luatex depends on a number of libraries.
# Include dependencies to get them built if we don't do make
# from the top-level directory.

Makefile: luatexdir/luatexlib.mk

# libpdf itself
luapdflib = luatexdir/libpdf.a
luapdflib_sources = $(srcdir)/luatexdir/*.c $(srcdir)/luatexdir/*.cc \
	$(srcdir)/luatexdir/*.h

$(luapdflib): $(luapdflib_sources) luatexdir/luatexextra.h ctangle
	cd luatexdir && mkdir -p font image lua lang tex && $(MAKE) $(common_makeargs) libpdf.a

# makecpool:

luatexdir/makecpool: luatexdir/makecpool.c
	cd luatexdir && $(MAKE) $(common_makeargs) makecpool

# lua
LIBLUADIR=../../libs/lua51
LIBLUASRCDIR=$(srcdir)/$(LIBLUADIR)
LIBLUADEP=$(LIBLUADIR)/liblua.a

luatarget=posix
ifeq ($(target),i386-mingw32)
  ifeq ($(host),i386-linux)
    luatarget = mingwcross
  else
    luatarget = mingw
  endif
else
ifeq ($(target),i386-linux)
  luatarget = posix
endif
endif


$(LIBLUADEP):
	mkdir -p $(LIBLUADIR) && cd $(LIBLUADIR) && cp -f $(LIBLUASRCDIR)/* . && $(MAKE) $(luatarget)

# slnunicode
SLNUNICODEDIR=../../libs/slnunicode
SLNUNICODESRCDIR=$(srcdir)/$(SLNUNICODEDIR)
SLNUNICODEDEP=$(SLNUNICODEDIR)/slnunico.o
$(SLNUNICODEDEP): $(SLNUNICODEDIR)/slnunico.c $(SLNUNICODEDIR)/slnudata.c
	mkdir -p $(SLNUNICODEDIR) && cd $(SLNUNICODEDIR) && cp -f $(SLNUNICODESRCDIR)/* . && $(CC) $(CFLAGS) -I$(LIBLUADIR) -o slnunico.o -c slnunico.c

# zziplib

# zziplib is a configuration nightmare, because it is so stubborn
# about using a pre-installed zlib. configure and make have to
# be fooled in two different ways. 
# - configure needs to find
# the subdirs 'include' and 'lib' in the --with-zlib prefix,
# and these need to contain the proper headers and libraries.
# - make needs to find the right headers using an -I via CPPFLAGS, 
# because the zlib path is relative and can't be found otherwise.
#
# final trickyness: configure writes a Makefile in the source
# directory. it is needed by anything, so I delete it right away

zzipretarget=

ifeq ($(target),i386-mingw32)
  zzipretarget=--target=$(target) --build=$(target) --host=$(host)
endif


ZZIPLIBDIR=../../libs/zziplib
ZZIPLIBSRCDIR=$(srcdir)/$(ZZIPLIBDIR)
ZZIPLIBDEP = $(ZZIPLIBDIR)/zzip/libzzip.a

$(ZZIPLIBDEP): $(ZZIPLIBSRCDIR)
	mkdir -p $(ZZIPLIBDIR)/zzip && cd $(ZZIPLIBDIR)/zzip && \
	cp ../$(ZZIPLIBSRCDIR)/zzip/Makefile . && $(MAKE) $(common_makeargs)

# luazip

LUAZIPDIR=../../libs/luazip
LUAZIPSRCDIR=$(srcdir)/$(LUAZIPDIR)
LUAZIPDEP=$(LUAZIPDIR)/src/luazip.o
LUAZIPINC=-I../../lua51 -I../$(ZZIPLIBSRCDIR) -I../$(ZZIPLIBDIR)

$(LUAZIPDEP): $(LUAZIPDIR)/src/luazip.c
	mkdir -p $(LUAZIPDIR) && cd $(LUAZIPDIR) && cp -R $(LUAZIPSRCDIR)/* . && \
    cd src && $(CC) $(CFLAGS) $(LUAZIPINC) -g -o luazip.o -c luazip.c

# luafilesystem

LUAFSDIR=../../libs/luafilesystem
LUAFSSRCDIR=$(srcdir)/$(LUAFSDIR)
LUAFSDEP=$(LUAFSDIR)/src/lfs.o
LUAFSINC=-I../../lua51

$(LUAFSDEP): $(LUAFSDIR)/src/lfs.c $(LUAFSDIR)/src/lfs.h
	mkdir -p $(LUAFSDIR) && cd $(LUAFSDIR) && cp -R $(LUAFSSRCDIR)/* . && \
    cd src && $(CC) $(CFLAGS) $(LUAFSINC) -g -o lfs.o -c lfs.c

# luapeg
LUAPEGDIR=../../libs/luapeg
LUAPEGSRCDIR=$(srcdir)/$(LUAPEGDIR)
LUAPEGDEP=$(LUAPEGDIR)/lpeg.o
$(LUAPEGDEP): $(LUAPEGDIR)/lpeg.c
	mkdir -p $(LUAPEGDIR) && cd $(LUAPEGDIR) && cp -f $(LUAPEGSRCDIR)/* . && $(CC) $(CFLAGS) -I$(LIBLUADIR) -g -o lpeg.o -c lpeg.c


# luamd5
LUAMDVDIR=../../libs/luamd5
LUAMDVSRCDIR=$(srcdir)/$(LUAMDVDIR)
LUAMDVDEP=$(LUAMDVDIR)/md5lib.o $(LUAMDVDIR)/md5.o
$(LUAMDVDEP): $(LUAMDVDIR)/md5lib.c $(LUAMDVDIR)/md5.h $(LUAMDVDIR)/md5.c
	mkdir -p $(LUAMDVDIR) && cd $(LUAMDVDIR) && cp -f $(LUAMDVSRCDIR)/* . && $(CC) $(CFLAGS) -I$(LIBLUADIR) -g -o md5.o -c md5.c && $(CC) $(CFLAGS) -I$(LIBLUADIR) -g -o md5lib.o -c md5lib.c

.PHONY: always

# luaff
LUAFFDIR=../../libs/luafontforge
LUAFFSRCDIR=$(srcdir)/$(LUAFFDIR)
LUAFFDEP=$(LUAFFDIR)/libff.a
$(LUAFFDEP): always
	mkdir -p $(LUAFFDIR) && cp -f $(LUAFFSRCDIR)/Makefile $(LUAFFDIR)
	mkdir -p $(LUAFFDIR)/fontforge && cp -f $(LUAFFSRCDIR)/fontforge/fontforge/Makefile $(LUAFFDIR)/fontforge
	mkdir -p $(LUAFFDIR)/Unicode && cp -f $(LUAFFSRCDIR)/fontforge/Unicode/Makefile $(LUAFFDIR)/Unicode
	cd $(LUAFFDIR) && $(MAKE)


# luazlib
LUAZLIBDIR=../../libs/luazlib
LUAZLIBSRCDIR=$(srcdir)/$(LUAZLIBDIR)
LUAZLIBDEP=$(LUAZLIBDIR)/lgzip.o $(LUAZLIBDIR)/lzlib.o
LUAZLIBINC=-I$(ZLIBSRCDIR) -I$(LIBLUASRCDIR)
$(LUAZLIBDEP): $(LUAZLIBDIR)/lgzip.c $(LUAZLIBDIR)/lzlib.c
	mkdir -p $(LUAZLIBDIR) && cd $(LUAZLIBDIR) && cp -f $(LUAZLIBSRCDIR)/* . && $(CC) $(CFLAGS) $(LUAZLIBINC) -g -o lgzip.o -c lgzip.c && $(CC) $(CFLAGS) $(LUAZLIBINC) -g -o lzlib.o -c lzlib.c


# Convenience variables.

luatexlibs = $(luapdflib) $(LDLIBPNG) $(LDZLIB) $(LDLIBXPDF) $(LIBMD5DEP) $(LDLIBOBSD) \
             $(LIBLUADEP) $(SLNUNICODEDEP)  $(LUAZIPDEP) $(ZZIPLIBDEP) $(LUAFSDEP) \
             $(LUAPEGDEP) $(LUAMDVDEP)  $(LUAZLIBDEP) $(LUAFFDEP)

luatexlibsdep = $(luapdflib) $(LIBPNGDEP) $(ZLIBDEP) $(LIBXPDFDEP) $(LIBMD5DEP) $(LIBOBSDDEP) \
                $(LIBLUADEP) $(SLNUNICODEDEP) $(ZZIPLIBDEP) $(LUAZIPDEP)  $(LUAFSDEP) \
                $(LUAPEGDEP) $(LUAMDVDEP)  $(LUAZLIBDEP) $(LUAFFDEP) $(makecpool)

## end of luatexlib.mk - Makefile fragment for libraries used by pdf[ex]tex.

# 
# Makefile fragments:
# Copyright (c) 2008 jerome DOT laurens AT u-bourgogne DOT fr
#
# This file is part of the SyncTeX package.
#
# License:
# --------
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE
#
# Except as contained in this notice, the name of the copyright holder  
# shall not be used in advertising or otherwise to promote the sale,  
# use or other dealings in this Software without prior written  
# authorization from the copyright holder.
#
# Acknowledgments:
# ----------------
# The author received useful remarks from the pdfTeX developers, especially Hahn The Thanh,
# and significant help from XeTeX developer Jonathan Kew
# 
# Nota Bene:
# ----------
# If you include or use a significant part of the synctex package into a software,
# I would appreciate to be listed as contributor and see "SyncTeX" highlighted.
# 
# Version 1
# Thu Jun 19 09:39:21 UTC 2008
# 
# Notice:
# -------
# Makefile fragment for synctex.
# It is included in web2c/Makefile.in

synctex_dir = $(srcdir)/synctexdir

Makefile: $(synctex_dir)/synctex.mk

# for all the engines, this trick allows to enable or disable SyncTeX support from here.
# One of the synctex functions is called before the main_control routine
# this is why we must include synctex-common.h header
synctex_common_texd = \
	echo "Enabling SyncTeX Support.";\
	echo "s|\#include \"texmfmp.h\"|&\\"> synctex_sed_command.txt;\
	echo "/* Start of SyncTeX Section */\\" >> synctex_sed_command.txt;\
	echo "\#define __SyncTeX__\\" >> synctex_sed_command.txt;\
	echo "\#include \"$(synctex_dir)/synctex-common.h\"\\" >> synctex_sed_command.txt;\
	echo "/* End  of SyncTeX Section */|g" >> synctex_sed_command.txt

### SyncTeX support in tex
# list of change files
tex_ch_srcs-with_synctex-mem_only = \
	$(synctex_dir)/synctex-mem.ch0 \
	$(synctex_dir)/synctex-mem.ch1 \
	$(synctex_dir)/synctex-mem.ch2
tex_ch_srcs-without_synctex = \
	$(tex_ch_srcs-with_synctex-mem_only) \
	$(synctex_dir)/synctex-rec.ch0 \
	$(synctex_dir)/synctex-rec.ch1 \
	$(synctex_dir)/synctex-rec.ch2
tex_ch_srcs-without_synctex =
synctex-tex.ch:tie tex.ch $(synctex-tex_ch_srcs)
	$(TIE) -c synctex-tex.ch $(srcdir)/tex.web $(synctex-tex_ch_srcs)
# The C sources and headers
synctex-tex_o = synctex.o
synctex.h: $(synctex_dir)/synctex.h
	cat $(synctex_dir)/synctex.h >$@
synctex-tex.h: $(synctex_dir)/$@
	cat $(synctex_dir)/$@ >$@
synctex.c: texd.h $(synctex_dir)/synctex.c synctex.h synctex-tex.h
	sed s/TEX-OR-MF-OR-MP/tex/ $(synctex_dir)/synctex.c >$@
texd.h-with_synctex = if test -z "`grep __SyncTeX__ texd.h`";\
	then\
		$(synctex_common_texd);\
		sed -f synctex_sed_command.txt texd.h > synctex_texd.h;\
		mv synctex_texd.h texd.h;\
		if test -z "`grep __SyncTeX__ texd.h`";\
		then\
			echo "warning: SyncTeX activation FAILED";\
			exit 1;\
		fi;\
		echo "warning: SyncTeX is enabled";\
	fi
texd.h-without_synctex = echo "warning: SyncTeX is NOT enabled"

### SyncTeX support in etex
# list of change files
synctex-etex_ch_srcs_mem_only = \
	$(synctex_dir)/synctex-mem.ch0 \
	$(synctex_dir)/synctex-mem.ch1 \
	$(synctex_dir)/synctex-e-mem.ch0 \
	$(synctex_dir)/synctex-e-mem.ch1
synctex-etex_ch_srcs_on = \
	$(synctex-etex_ch_srcs_mem_only) \
	$(synctex_dir)/synctex-rec.ch0 \
	$(synctex_dir)/synctex-rec.ch1 \
	$(synctex_dir)/synctex-e-rec.ch0 \
	$(synctex_dir)/synctex-e-rec.ch1
synctex-etex_ch_srcs_off =
# The C sources and headers
synctex-etex_o = synctex-e.o
synctex-e.h: $(synctex_dir)/synctex.h
	cat $(synctex_dir)/synctex.h >$@
synctex-etex.h: $(synctex_dir)/$@
	cat $(synctex_dir)/$@ >$@
synctex-e.c: etexd.h $(synctex_dir)/synctex.c synctex-etex.h
	sed s/TEX-OR-MF-OR-MP/etex/ $(synctex_dir)/synctex.c >$@
etexd.h-with_synctex = if test -z "`grep __SyncTeX__ etexd.h`";\
	then\
		$(synctex_common_texd);\
		sed -f synctex_sed_command.txt etexd.h > synctex_etexd.h;\
		mv synctex_etexd.h etexd.h;\
		if test -z "`grep __SyncTeX__ etexd.h`";\
		then\
			echo "warning: SyncTeX activation FAILED";\
			exit 1;\
		fi;\
		echo "warning: SyncTeX is enabled";\
	fi
etexd.h-without_synctex = echo "warning: SyncTeX is NOT enabled"

### SyncTeX support in pdftex
# list of change files
pdftex_ch_srcs-with_synctex-mem_only = \
	$(synctex_dir)/synctex-mem.ch0 \
	$(synctex_dir)/synctex-mem.ch1 \
	$(synctex_dir)/synctex-e-mem.ch0 \
	$(synctex_dir)/synctex-e-mem.ch1
pdftex_ch_srcs-with_synctex = \
	$(pdftex_ch_srcs-with_synctex-mem_only) \
	$(synctex_dir)/synctex-rec.ch0 \
	$(synctex_dir)/synctex-rec.ch1 \
	$(synctex_dir)/synctex-e-rec.ch0 \
	$(synctex_dir)/synctex-e-rec.ch1 \
	$(synctex_dir)/synctex-pdf-rec.ch2
pdftex_ch_srcs-without_synctex =
# The C sources and headers
pdftex_o-with_synctex = synctex-pdf.o
pdftex_o-without_synctex = 
synctex-pdf.h: $(synctex_dir)/synctex.h
	cat $(synctex_dir)/synctex.h >$@
synctex-pdftex.h: $(synctex_dir)/$@
	cat $(synctex_dir)/$@ >$@
synctex-pdf.c: pdftexd.h $(synctex_dir)/synctex.c synctex-pdftex.h
	sed s/TEX-OR-MF-OR-MP/pdftex/ $(synctex_dir)/synctex.c >$@
pdftexd.h-with_synctex = if test -z "`grep __SyncTeX__ pdftexd.h`";\
	then\
		$(synctex_common_texd);\
		sed -f synctex_sed_command.txt pdftexd.h > synctex_pdftexd.h;\
		mv synctex_pdftexd.h pdftexd.h;\
		if test -z "`grep __SyncTeX__ pdftexd.h`";\
		then\
			echo "warning: SyncTeX activation FAILED";\
			exit 1;\
		fi;\
		echo "warning: SyncTeX is enabled";\
	fi
pdftexd.h-without_synctex = echo "warning: SyncTeX is NOT enabled"

### SyncTeX support in xetex
# Actually, xetex cannot build without SyncTeX because the tex.web
# code does not provide proper entry points
# list of change files
xetex_ch_srcs-with_synctex-mem_only = \
	$(synctex_dir)/synctex-mem.ch0 \
	$(synctex_dir)/synctex-e-mem.ch0 \
	$(synctex_dir)/synctex-e-mem.ch1 \
	$(synctex_dir)/synctex-xe-mem.ch2
xetex_ch_srcs-with_synctex = \
	$(xetex_ch_srcs-with_synctex-mem_only) \
	$(synctex_dir)/synctex-rec.ch0 \
	$(synctex_dir)/synctex-e-rec.ch0 \
	$(synctex_dir)/synctex-xe-rec.ch2
xetex_ch_srcs-without_synctex =
xetex_post_ch_srcs-with_synctex = \
	$(synctex_dir)/synctex-xe-rec.ch3
xetex_post_ch_srcs-without_synctex =
# The C sources and headers
xetex_o-with_synctex = synctex-xe.o
xetex_o-without_synctex = 
synctex-xe.h: $(synctex_dir)/synctex.h
	cat $(synctex_dir)/synctex.h >$@
synctex-xetex.h: $(synctex_dir)/$@
	cat $(synctex_dir)/$@ >$@
synctex-xe.c: xetexd.h $(synctex_dir)/synctex.c synctex-xetex.h
	sed s/TEX-OR-MF-OR-MP/xetex/ $(synctex_dir)/synctex.c >$@
xetexd.h-with_synctex = if test -z "`grep __SyncTeX__ xetexd.h`";\
	then\
		$(synctex_common_texd);\
		sed -f synctex_sed_command.txt xetexd.h > synctex_xetexd.h;\
		mv synctex_xetexd.h xetexd.h;\
		if test -z "`grep __SyncTeX__ xetexd.h`";\
		then\
			echo "warning: SyncTeX activation FAILED";\
			exit 1;\
		fi;\
		echo "warning: SyncTeX is enabled";\
	fi
xetexd.h-without_synctex = echo "warning: SyncTeX is NOT enabled"

# the synctex tool
synctex_parser.o: $(synctex_dir)/synctex_parser.c $(synctex_dir)/synctex_parser.h
	$(compile) -c -DSYNCTEX_USE_LOCAL_HEADER -I$(synctex_dir) $(ZLIBCPPFLAGS) -o $@ $<

synctex_main.o: $(synctex_dir)/synctex_main.c $(synctex_dir)/synctex_parser.h
	$(compile) -c -I$(synctex_dir) $(ZLIBCPPFLAGS) -o $@ $<

synctex:synctex_main.o synctex_parser.o $(ZLIBDEPS)
	$(link_command) synctex_main.o synctex_parser.o $(LDZLIB) $(LIBS)

# Cleaning up.
clean:: synctex-clean
synctex-clean:
	-rm -f *synctex*

# end of synctex.mk
# Makefile fragment for e-TeX and web2c. --infovore@xs4all.nl. Public domain.
# This fragment contains the parts of the makefile that are most likely to
# differ between releases of e-TeX.

Makefile: etexdir/etex.mk

# We build etex.
etex =  etex

# Extract etex version
etexdir/etex.version: etexdir/etex.ch
	grep '^@d eTeX_version_string==' $(srcdir)/etexdir/etex.ch \
	  | sed "s/^.*'-//;s/'.*$$//" >etexdir/etex.version

# The C sources.
etex_c = etexini.c etex0.c etex1.c etex2.c
etex_o = etexini.o etex0.o etex1.o etex2.o etex-pool.o etexextra.o

# Making etex.
etex: $(etex_o)
	$(kpathsea_link) $(etex_o) $(socketlibs) $(LOADLIBES)

# C file dependencies
$(etex_c) etexcoerce.h etexd.h: etex.p $(web2c_texmf)
	$(web2c) etex
etexextra.c: etexdir/etexextra.h lib/texmfmp.c
	sed s/TEX-OR-MF-OR-MP/etex/ $(srcdir)/lib/texmfmp.c >$@
etexdir/etexextra.h: etexdir/etexextra.in etexdir/etex.version
	test -d etexdir || mkdir etexdir
	sed s/ETEX-VERSION/`cat etexdir/etex.version`/ \
	  $(srcdir)/etexdir/etexextra.in >$@

# Tangling
etex.p etex.pool: tangle etex.web etex.ch
	$(TANGLE) etex.web etex.ch

# Generation of the web and ch file.
#   Sources for etex.web:
etex_web_srcs = $(srcdir)/tex.web \
  $(srcdir)/etexdir/etex.ch \
  $(srcdir)/etexdir/etex.fix
#   Sources for etex.ch:
etex_ch_srcs = etex.web \
  $(srcdir)/etexdir/tex.ch0 \
  $(srcdir)/tex.ch \
  $(srcdir)/etexdir/tex.ch1 \
  $(srcdir)/etexdir/tex.ech \
  $(srcdir)/etexdir/etex-binpool.ch
#   Rules:
etex.web: tie etexdir/etex.mk $(etex_web_srcs)
	$(TIE) -m etex.web $(etex_web_srcs)
etex.ch: $(etex_ch_srcs)
	$(TIE) -c etex.ch $(etex_ch_srcs)

etex-pool.c: etex.pool $(makecpool) tmf-pool.h
	$(makecpool) etex.pool $(srcdir)/tmf-pool.h >$@ || rm -f $@

# Tests...
check:  etex-check
etex-check: etrip etex.fmt
# Test truncation (but don't bother showing the warning msg).
	./etex --progname=etex --output-comment="`cat $(srcdir)/PROJECTS`" \
	  $(srcdir)/tests/hello 2>/dev/null \
	  && ./dvitype hello.dvi | grep olaf@infovore.xs4all.nl >/dev/null
# \openout should show up in \write's.
	./etex --progname=etex $(srcdir)/tests/openout && grep xfoo openout.log
# one.two.tex -> one.two.log
	./etex --progname=etex $(srcdir)/tests/one.two && ls -l one.two.log
# uno.dos -> uno.log
	./etex --progname=etex $(srcdir)/tests/uno.dos && ls -l uno.log
	./etex --progname=etex $(srcdir)/tests/just.texi && ls -l just.log
	-./etex --progname=etex $(srcdir)/tests/batch.tex
	./etex --progname=etex --shell $(srcdir)/tests/write18 | grep echo
# tcx files are a bad idea.
#	./etex --translate-file=$(srcdir)/share/isol1-t1.tcx \
#	  $(srcdir)/tests/eight && ./dvitype eight.dvi >eigh.typ
	TEXMFCNF=../kpathsea \
	  ./etex --mltex --progname=einitex $(srcdir)/tests/mltextst
	-./etex --progname=etex </dev/null
	-PATH=`pwd`:$(kpathsea_dir):$(kpathsea_srcdir):$$PATH \
	  WEB2C=$(kpathsea_srcdir) TMPDIR=.. \
	  ./etex --progname=etex '\nonstopmode\font\foo=nonesuch\end'

# Cleaning up.
clean:: etex-clean
etex-clean: etrip-clean
	$(LIBTOOL) --mode=clean $(RM) etex
	rm -f $(etex_o) $(etex_c) etexextra.c etexcoerce.h etexd.h
	rm -f etexdir/etexextra.h etexdir/etex.version
	rm -f etex.p etex.pool etex.web etex.ch
	rm -f etex.fmt etex.log
	rm -f hello.dvi hello.log xfoo.out openout.log one.two.log uno.log
	rm -f just.log batch.log write18.log mltextst.log texput.log
	rm -f missfont.log
	rm -rf tfm

# etrip
etestdir = $(srcdir)/etexdir/etrip
etestenv = TEXMFCNF=$(etestdir)

triptrap:  etrip
etrip: pltotf tftopl etex dvitype etrip-clean
	@echo ">>> See $(etestdir)/etrip.diffs for example of acceptable diffs." >&2
	@echo "*** TRIP test for e-TeX in compatibility mode ***."
	./pltotf $(testdir)/trip.pl trip.tfm
	./tftopl ./trip.tfm trip.pl
	-diff $(testdir)/trip.pl trip.pl
	$(LN) $(testdir)/trip.tex . # get same filename in log
	-$(SHELL) -c '$(etestenv) ./etex --progname=einitex --ini <$(testdir)/trip1.in >ctripin.fot'
	mv trip.log ctripin.log
	-diff $(testdir)/tripin.log ctripin.log
	-$(SHELL) -c '$(etestenv) ./etex --progname=etex <$(testdir)/trip2.in >ctrip.fot'
	mv trip.log ctrip.log
	-diff $(testdir)/trip.fot ctrip.fot
	-$(DIFF) $(DIFFFLAGS) $(testdir)/trip.log ctrip.log
	$(SHELL) -c '$(etestenv) ./dvitype $(dvitype_args) trip.dvi >ctrip.typ'
	-$(DIFF) $(DIFFFLAGS) $(testdir)/trip.typ ctrip.typ
	@echo "*** TRIP test for e-TeX in extended mode ***."
	-$(SHELL) -c '$(etestenv) ./etex --progname=einitex --ini <$(etestdir)/etrip1.in >xtripin.fot'
	mv trip.log xtripin.log
	-diff ctripin.log xtripin.log
	-$(SHELL) -c '$(etestenv) ./etex --progname=etex <$(etestdir)/trip2.in >xtrip.fot'
	mv trip.log xtrip.log
	-diff ctrip.fot xtrip.fot
	-$(DIFF) $(DIFFFLAGS) ctrip.log xtrip.log
	$(SHELL) -c '$(etestenv) ./dvitype $(dvitype_args) trip.dvi >xtrip.typ'
	-$(DIFF) $(DIFFFLAGS) ctrip.typ xtrip.typ
	@echo "*** e-TeX specific part of e-TRIP test ***."
	./pltotf $(etestdir)/etrip.pl etrip.tfm
	./tftopl ./etrip.tfm etrip.pl
	-diff $(etestdir)/etrip.pl etrip.pl
	$(LN) $(etestdir)/etrip.tex . # get same filename in log
	-$(SHELL) -c '$(etestenv) ./etex --progname=einitex --ini <$(etestdir)/etrip2.in >etripin.fot'
	mv etrip.log etripin.log
	-diff $(etestdir)/etripin.log etripin.log
	-$(SHELL) -c '$(etestenv) ./etex --progname=etex <$(etestdir)/etrip3.in >etrip.fot'
	-diff $(etestdir)/etrip.fot etrip.fot
	-$(DIFF) $(DIFFFLAGS) $(etestdir)/etrip.log etrip.log
	diff $(etestdir)/etrip.out etrip.out
	$(SHELL) -c '$(etestenv) ./dvitype $(dvitype_args) etrip.dvi >etrip.typ'
	-$(DIFF) $(DIFFFLAGS) $(etestdir)/etrip.typ etrip.typ

# Cleaning up for the etrip.
etrip-clean:
	rm -f trip.tfm trip.pl trip.tex trip.fmt ctripin.fot ctripin.log
	rm -f ctrip.fot ctrip.log trip.dvi ctrip.typ
	rm -f xtripin.fot xtripin.log
	rm -f xtrip.fot xtrip.log xtrip.typ
	rm -f etrip.tfm etrip.pl etrip.tex etrip.fmt etripin.fot etripin.log
	rm -f etrip.fot etrip.log etrip.dvi etrip.out etrip.typ
	rm -f tripos.tex 8terminal.tex
	rm -rf tfm

# Distfiles ...
#M#triptrapdiffs: etexdir/etrip/etrip.diffs
#M#etexdir/etrip/etrip.diffs: etex
#M#	$(MAKE) etrip | tail +1 >etexdir/etrip/etrip.diffs


# Dumps
all_efmts = etex.fmt $(efmts)

dumps:  efmts
efmts: $(all_efmts)

efmtdir = $(web2cdir)/etex
$(efmtdir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(efmtdir)

etex.fmt: etex
	$(dumpenv) $(MAKE) progname=etex files="etex.src plain.tex cmr10.tfm" prereq-check
	$(dumpenv) ./etex --progname=etex --jobname=etex --ini \*\\input etex.src \\dump </dev/null

elatex.fmt: etex
	$(dumpenv) $(MAKE) progname=elatex files="latex.ltx" prereq-check
	$(dumpenv) ./etex --progname=elatex --jobname=elatex --ini \*\\input latex.ltx </dev/null

latex.fmt: etex
	$(dumpenv) $(MAKE) progname=latex files="latex.ltx" prereq-check
	$(dumpenv) ./etex --progname=latex --jobname=latex --ini \*\\input latex.ltx </dev/null

#ctex.fmt: etex
#	$(dumpenv) $(MAKE) progname=ctex files="plain.tex cmr10.tfm" prereq-check
#	$(dumpenv) ./etex --progname=ctex --jobname=ctex --ini \\input plain \\dump </dev/null

#olatex.fmt: etex
#	$(dumpenv) $(MAKE) progname=olatex files="latex.ltx" prereq-check
#	$(dumpenv) ./etex --progname=olatex --progname=olatex --ini \\input latex.ltx </dev/null

# 
# Installation -- nothing by default, that is, we omit the
# install-programs target.  We want to make etex a symlink to pdftex,
# via texlinks.  Leave this unused install-etex* targets just to show
# that the real binary does get built and can be used if desired.

install-etex: install-etex-exec
install-etex-exec: etex $(bindir)
	for p in etex; do $(INSTALL_LIBTOOL_PROG) $$p $(bindir); done

# end of etex.mk
# Makefile fragment for Omega and web2c. --infovore@xs4all.nl. Public domain.
# This fragment contains the parts of the makefile that are most likely to
# differ between releases of Omega.

Makefile: omegadir/omega.mk

omegafonts_programs =  omegafonts/omfonts
otps_programs =  otps/otp2ocp otps/outocp
omegafonts =  omegafonts
otps =  otps

odvicopy = odvicopy
odvitype = odvitype
otangle = otangle
omegaware_c = odvicopy.c odvitype.c otangle.c
omegaware_programs = $(otangle) $(odvicopy) $(odvitype)

omega_programs = $(omega) $(otangle) $(odvicopy) $(odvitype) \
                 $(otps_programs) $(omegafonts_programs)

# The otangle used in the build is not be the otangle we build if we are
# cross-compiling.
OTANGLE = ./otangle

# Omegaware

odvicopy: odvicopy.o
	$(kpathsea_link) odvicopy.o $(LOADLIBES)
odvicopy.c odvicopy.h: $(web2c_common) $(web2c_programs) odvicopy.p
	$(web2c) odvicopy
odvicopy.p: tangle omegaware/odvicopy.web omegaware/odvicopy.ch
	WEBINPUTS=$(srcdir)/omegaware $(TANGLE) odvicopy odvicopy
check: odvicopy-check
odvicopy-check: odvicopy
#	./odvicopy $(srcdir)/tests/story tests/xstory.dvi
## Redirect stderr so the terminal output will end up in the log file.
#	(TFMFONTS=$(srcdir)/tests: ./odvicopy <$(srcdir)/tests/pplr.dvi \
#	  >tests/xpplr.dvi) 2>&1
clean:: odvicopy-clean
odvicopy-clean:
	$(LIBTOOL) --mode=clean $(RM) odvicopy
	rm -f odvicopy.o odvicopy.c odvicopy.h odvicopy.p
#	rm -f tests/xstory.dvi tests/xpplr.dvi

odvitype: odvitype.o
	$(kpathsea_link) odvitype.o $(LOADLIBES)
odvitype.c odvitype.h: $(web2c_common) $(web2c_programs) odvitype.p
	$(web2c) odvitype
odvitype.p: tangle omegaware/odvitype.web omegaware/odvitype.ch
	WEBINPUTS=$(srcdir)/omegaware $(TANGLE) odvitype odvitype
check: odvitype-check
odvitype-check: odvitype
#	./odvitype -show-opcodes $(srcdir)/tests/story >tests/xstory.dvityp
#	./odvitype --p=\*.\*.2 $(srcdir)/tests/pagenum.dvi >tests/xpagenum.typ
clean:: odvitype-clean
odvitype-clean:
	$(LIBTOOL) --mode=clean $(RM) odvitype
	rm -f odvitype.o odvitype.c odvitype.h odvitype.p
#	rm -f tests/xstory.dvityp tests/xpagenum.typ

otangle: otangle.o
	$(kpathsea_link) otangle.o $(LOADLIBES)
otangle.c otangle.h: $(web2c_common) $(web2c_programs) otangle.p
	$(web2c) otangle
otangle.p: tangle omegaware/otangle.web omegaware/otangle.ch
	WEBINPUTS=$(srcdir)/omegaware $(TANGLE) otangle otangle
check: otangle-check
otangle-check: otangle
#	otangling omega is a good check already
clean:: otangle-clean
otangle-clean:
	$(LIBTOOL) --mode=clean $(RM) otangle
	rm -f otangle.o otangle.c otangle.h otangle.p

# 
# Omega itself.

# We build omega
omega =  omega

# The C sources.
omega_c = omegaini.c omega0.c omega1.c omega2.c omega3.c
omega_o = omegaini.o omega0.o omega1.o omega2.o \
	      omegaextra.o omega.o omegabis.o \
              omega3.o omega-pool.o

# Linking
omega: $(omega_o)
	$(kpathsea_link) $(omega_o) $(socketlibs) $(LOADLIBES)

# The C files
$(omega_c) omegacoerce.h omegad.h: omega.p $(web2c_texmf)
	$(web2c) omega
omegaextra.c: lib/texmfmp.c
	sed s/TEX-OR-MF-OR-MP/omega/ $(srcdir)/lib/texmfmp.c >$@
# Additional C files, just copy them.
omega.c: omegadir/omega.c
	-rm -f $@
	cp $(srcdir)/omegadir/omega.c $@
omegabis.c: omegadir/omegabis.c 
	-rm -f $@
	cp $(srcdir)/omegadir/omegabis.c $@
omegamem.h: omegadir/omegamem.h
	-rm -f $@
	cp $(srcdir)/omegadir/omegamem.h $@

# The Pascal file
omega.p omega.pool: otangle omega.web omega.ch
	$(OTANGLE) omega.web omega.ch

# Generation of the web and ch files.
omega.web: tie tex.web omegadir/omega.mk
omega.web: omegadir/omnode.ch
omega.web: omegadir/om16bit.ch
omega.web: omegadir/omstr.ch
omega.web: omegadir/omfont.ch
omega.web: omegadir/omchar.ch
omega.web: omegadir/omfi.ch
omega.web: omegadir/ompar.ch
omega.web: omegadir/omocp.ch
omega.web: omegadir/omfilter.ch
omega.web: omegadir/omtrans.ch
omega.web: omegadir/omdir.ch
omega.web: omegadir/omxml.ch
	$(TIE) -m omega.web $(srcdir)/tex.web \
	 $(srcdir)/omegadir/omnode.ch \
	 $(srcdir)/omegadir/om16bit.ch \
	 $(srcdir)/omegadir/omstr.ch \
	 $(srcdir)/omegadir/omfont.ch \
	 $(srcdir)/omegadir/omchar.ch \
	 $(srcdir)/omegadir/omfi.ch \
	 $(srcdir)/omegadir/ompar.ch \
	 $(srcdir)/omegadir/omocp.ch \
	 $(srcdir)/omegadir/omfilter.ch \
	 $(srcdir)/omegadir/omtrans.ch \
	 $(srcdir)/omegadir/omdir.ch \
	 $(srcdir)/omegadir/omxml.ch
omega.ch: tie omega.web omegadir/omega.mk
omega.ch: omegadir/comnode.ch
omega.ch: omegadir/com16bit.ch
omega.ch: omegadir/comstr.ch
omega.ch: omegadir/comfont.ch
omega.ch: omegadir/comchar.ch
omega.ch: omegadir/comfi.ch
omega.ch: omegadir/compar.ch
omega.ch: omegadir/comocp.ch
omega.ch: omegadir/comfilter.ch
omega.ch: omegadir/comtrans.ch
omega.ch: omegadir/comdir.ch
omega.ch: omegadir/comxml.ch
omega.ch: omegadir/comsrcspec.ch
	$(TIE) -c omega.ch omega.web \
	 $(srcdir)/omegadir/comnode.ch \
	 $(srcdir)/omegadir/com16bit.ch \
	 $(srcdir)/omegadir/comstr.ch \
	 $(srcdir)/omegadir/comfont.ch \
	 $(srcdir)/omegadir/comchar.ch \
	 $(srcdir)/omegadir/comfi.ch \
	 $(srcdir)/omegadir/compar.ch \
	 $(srcdir)/omegadir/comocp.ch \
	 $(srcdir)/omegadir/comfilter.ch \
	 $(srcdir)/omegadir/comtrans.ch \
	 $(srcdir)/omegadir/comdir.ch \
	 $(srcdir)/omegadir/comxml.ch \
	 $(srcdir)/omegadir/comsrcspec.ch

omega-pool.c: omega.pool $(makecpool)
	$(makecpool) omega.pool omegadir/omega-pool.h >$@ || rm -f $@

# Check: right now all we do is build the format.
check:  omega-check
omega-check: omega omega.fmt
# Cleaning up from building omega
clean:: omega-clean
omega-clean:
	$(LIBTOOL) --mode=clean $(RM) omega
	rm -f $(omega_c) omegaextra.c omegacoerce.h omegad.h
	rm -f omega.c omegabis.c omegamem.h
	rm -f omega.p omega.pool omega.web omega.ch

# 
# Dumps.
all_ofmts =  omega.fmt $(ofmts)

dumps:  ofmts
ofmts: $(all_ofmts)

ofmtdir = $(web2cdir)/omega
$(ofmtdir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(ofmtdir)

omega.fmt: omega
	$(dumpenv) $(MAKE) progname=omega files="omega.tex" prereq-check
	$(dumpenv) ./omega --progname=omega --jobname=omega --ini \\input omega.tex \\dump </dev/null

lambda.fmt: omega
	$(dumpenv) $(MAKE) progname=lambda files="lambda.tex" prereq-check
	$(dumpenv) ./omega --progname=lambda --jobname=lambda --ini \\input lambda.tex </dev/null


# 
# Some additional programs for Omega: the programs themselves are named
# in the variable otps_programs, defined above.
otps/otp2ocp:
	cd otps && $(MAKE) $(common_makeargs) otp2ocp
otps/outocp:
	cd otps && $(MAKE) $(common_makeargs) outocp
omegafonts/omfonts:
	cd omegafonts && $(MAKE) $(common_makeargs) omfonts

# 
# Installation.
install-omega: install-omega-exec
install-programs:  install-omega-exec
install-omega-exec: $(omega_programs) $(bindir) install-omega-links
	for p in omega; do $(INSTALL_LIBTOOL_PROG) $$p $(bindir); done
	cd otps && $(MAKE) $(install_makeargs) install-programs
	cd omegafonts && $(MAKE) $(install_makeargs) install-programs

install-omega-links:
	cd omegafonts && $(MAKE) $(install_makeargs) install-links

# end of omega.mk
# Makefile fragment for Aleph and web2c. --infovore@xs4all.nl. Public domain.
# This fragment contains the parts of the makefile that are most likely to
# differ between releases of Aleph.

alephdir = alephdir
calephdir = alephdir

Makefile: $(alephdir)/aleph.mk
# 
# Aleph itself.

# We build aleph
aleph =  aleph
alephbuild=rc2

# The C sources.
aleph_c = alephini.c aleph0.c aleph1.c aleph2.c aleph3.c
aleph_o = alephini.o aleph0.o aleph1.o aleph2.o \
	      alephextra.o aleph.o alephbis.o \
              aleph3.o aleph-pool.o

# Linking
aleph: $(aleph_o)
	$(kpathsea_link) $(aleph_o) $(socketlibs) $(LOADLIBES)

# The C files
$(aleph_c) alephcoerce.h alephd.h: aleph.p $(web2c_texmf)
	$(web2c) aleph
alephextra.c: lib/texmfmp.c
	sed s/TEX-OR-MF-OR-MP/aleph/ $(srcdir)/lib/texmfmp.c >$@
$(alephdir)/alephextra.h: $(alephdir)/alephextra-$(alephbuild).h
	-rm -f $@
	test -d $(alephdir) || mkdir $(alephdir)
	cp $(srcdir)/$(alephdir)/alephextra-$(alephbuild).h $@

# Additional C files, just copy them.
aleph.c: $(calephdir)/aleph.c
	-rm -f $@
	cp $(srcdir)/$(calephdir)/aleph.c $@
alephbis.c: $(calephdir)/alephbis.c 
	-rm -f $@
	cp $(srcdir)/$(calephdir)/alephbis.c $@
alephmem.h: $(calephdir)/alephmem.h
	-rm -f $@
	cp $(srcdir)/$(calephdir)/alephmem.h $@

# The Pascal file
aleph.p aleph.pool: otangle aleph.web aleph.ch
	$(OTANGLE) aleph.web aleph.ch

# Generation of the web and ch files.
aleph.web: tie tex.web $(alephdir)/aleph.mk
aleph.web: $(alephdir)/om16bit.ch
aleph.web: $(alephdir)/omstr.ch
aleph.web: $(alephdir)/omfont.ch
aleph.web: $(alephdir)/omchar.ch
aleph.web: $(alephdir)/omfi.ch
aleph.web: $(alephdir)/ompar.ch
aleph.web: $(alephdir)/omocp.ch
aleph.web: $(alephdir)/omfilter.ch
aleph.web: $(alephdir)/omtrans.ch
aleph.web: $(alephdir)/omdir.ch
aleph.web: $(alephdir)/eobase.ch
aleph.web: $(alephdir)/eofmt.ch
aleph.web: $(alephdir)/eomem-$(alephbuild).ch
aleph.web: $(alephdir)/eo16bit-$(alephbuild).ch
aleph.web: $(alephdir)/eoext.ch
aleph.web: $(alephdir)/eoeqtb.ch
aleph.web: $(alephdir)/eofix.ch
aleph.web: $(alephdir)/eocprt.ch
aleph.web: $(alephdir)/eonewdir-$(alephbuild).ch
aleph.web: $(alephdir)/eover-$(alephbuild).ch
aleph.web: $(alephdir)/eopage-$(alephbuild).ch
aleph.web: $(alephdir)/eochar-$(alephbuild).ch
	$(TIE) -m aleph.web $(srcdir)/tex.web \
	 $(srcdir)/$(alephdir)/om16bit.ch \
	 $(srcdir)/$(alephdir)/omstr.ch \
	 $(srcdir)/$(alephdir)/omfont.ch \
	 $(srcdir)/$(alephdir)/omchar.ch \
	 $(srcdir)/$(alephdir)/omfi.ch \
	 $(srcdir)/$(alephdir)/ompar.ch \
	 $(srcdir)/$(alephdir)/omocp.ch \
	 $(srcdir)/$(alephdir)/omfilter.ch \
	 $(srcdir)/$(alephdir)/omtrans.ch \
	 $(srcdir)/$(alephdir)/omdir.ch \
	 $(srcdir)/$(alephdir)/eobase.ch \
	 $(srcdir)/$(alephdir)/eofmt.ch \
	 $(srcdir)/$(alephdir)/eomem-$(alephbuild).ch \
	 $(srcdir)/$(alephdir)/eo16bit-$(alephbuild).ch \
	 $(srcdir)/$(alephdir)/eoext.ch \
	 $(srcdir)/$(alephdir)/eoeqtb.ch \
	 $(srcdir)/$(alephdir)/eofix.ch \
	 $(srcdir)/$(alephdir)/eocprt.ch \
	 $(srcdir)/$(alephdir)/eonewdir-$(alephbuild).ch \
	 $(srcdir)/$(alephdir)/eover-$(alephbuild).ch \
	 $(srcdir)/$(alephdir)/eopage-$(alephbuild).ch \
	 $(srcdir)/$(alephdir)/eochar-$(alephbuild).ch
aleph.ch: tie aleph.web $(alephdir)/aleph.mk
aleph.ch: $(calephdir)/com16bit-$(alephbuild).ch
aleph.ch: $(calephdir)/comstr.ch
aleph.ch: $(calephdir)/comfont.ch
aleph.ch: $(calephdir)/comchar.ch
aleph.ch: $(calephdir)/comfi.ch
aleph.ch: $(calephdir)/compar.ch
aleph.ch: $(calephdir)/comocp.ch
aleph.ch: $(calephdir)/comfilter.ch
aleph.ch: $(calephdir)/comtrans.ch
aleph.ch: $(calephdir)/comdir.ch
aleph.ch: $(calephdir)/comsrcspec.ch
aleph.ch: $(calephdir)/ceostuff.ch
	$(TIE) -c aleph.ch aleph.web \
	 $(srcdir)/$(calephdir)/com16bit-$(alephbuild).ch \
	 $(srcdir)/$(calephdir)/comstr.ch \
	 $(srcdir)/$(calephdir)/comfont.ch \
	 $(srcdir)/$(calephdir)/comchar.ch \
	 $(srcdir)/$(calephdir)/comfi.ch \
	 $(srcdir)/$(calephdir)/compar.ch \
	 $(srcdir)/$(calephdir)/comocp.ch \
	 $(srcdir)/$(calephdir)/comfilter.ch \
	 $(srcdir)/$(calephdir)/comtrans.ch \
	 $(srcdir)/$(calephdir)/comdir.ch \
	 $(srcdir)/$(calephdir)/comsrcspec.ch \
	 $(srcdir)/$(calephdir)/ceostuff.ch

aleph-pool.c: aleph.pool $(makecpool)
	$(makecpool) aleph.pool alephdir/aleph-pool.h >$@ || rm -f $@

# Check: right now all we do is build the format.
check:  aleph-check
aleph-check: aleph aleph.fmt
# Cleaning up from building aleph
clean:: aleph-clean
aleph-clean:
	$(LIBTOOL) --mode=clean $(RM) aleph
	rm -f $(aleph_c) alephextra.c alephcoerce.h alephd.h
	rm -f $(alephdir)/alephextra.h
	rm -f aleph.c alephbis.c alephmem.h
	rm -f aleph.p aleph.pool aleph.web aleph.ch

# 
# Dumps.
all_afmts = aleph.fmt $(afmts)

dumps:  afmts
afmts: $(all_afmts)

afmtdir = $(web2cdir)/aleph
$(afmtdir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(afmtdir)

aleph.fmt: aleph
	$(dumpenv) $(MAKE) progname=aleph files="omega.ini" prereq-check
	$(dumpenv) ./aleph --ini --progname=aleph --jobname=aleph \\input omega.tex \\dump </dev/null
lamed.fmt: aleph
	$(dumpenv) $(MAKE) progname=lamed files="lambda.tex" prereq-check
	$(dumpenv) ./aleph --ini --progname=lamed --jobname=lamed \\input lambda.tex </dev/null

# 
# Installation.
install-aleph: install-aleph-exec
install-programs:  install-aleph-exec
install-aleph-exec: aleph $(bindir)
	for p in aleph; do $(INSTALL_LIBTOOL_PROG) $$p $(bindir); done

# end of aleph.mk
# Makefile fragment for pdfeTeX and web2c. --infovore@xs4all.nl. Public domain.
# This fragment contains the parts of the makefile that are most likely to
# differ between releases of pdfeTeX.
# $Id: pdftex.mk 9446 2008-07-11 06:51:52Z thanh $

# We build pdftex
pdftex =  pdftex
pdftexdir = pdftexdir

LIBOBSDCOMPATDIR=../../libs/obsdcompat
LIBOBSDCOMPATSRCDIR=$(srcdir)/$(LIBOBSDCOMPATDIR)
XCPPFLAGS=-I$(LIBOBSDCOMPATDIR) -I$(LIBOBSDCOMPATDIR)/.. -I$(LIBOBSDCOMPATSRCDIR) -I$(LIBOBSDCOMPATSRCDIR)/.. -I$(ZLIBSRCDIR)

Makefile: $(srcdir)/$(pdftexdir)/pdftex.mk

pdftex_bin = pdftex ttf2afm pdftosrc
linux_build_dir = $(HOME)/pdftex/build/linux/texk/web2c

# Extract pdftex version
$(pdftexdir)/pdftex.version: $(srcdir)/$(pdftexdir)/pdftex.web
	test -d $(pdftexdir) || mkdir $(pdftexdir)
	grep '^@d pdftex_version_string==' $(srcdir)/$(pdftexdir)/pdftex.web \
	  | sed "s/^.*'-//;s/'.*$$//" \
	  >$(pdftexdir)/pdftex.version

# The C sources.
pdftex_c = pdftexini.c pdftex0.c pdftex1.c pdftex2.c pdftex3.c
pdftex_o = pdftexini.o pdftex0.o pdftex1.o pdftex2.o pdftex3.o pdftexextra.o \
pdftex-pool.o $(pdftex_o-with_synctex)

# Making pdftex
pdftex: pdftexd.h $(pdftex_o) $(pdftexextra_o) $(pdftexlibsdep)
	$(kpathsea_cxx_link) $(pdftex_o) $(pdftexextra_o) $(pdftexlibs) $(socketlibs) $(LOADLIBES) 

# C file dependencies.
$(pdftex_c) pdftexcoerce.h pdftexd.h: pdftex.p $(web2c_texmf) $(srcdir)/$(pdftexdir)/pdftex.defines $(srcdir)/$(pdftexdir)/pdftex.h
	$(web2c) pdftex
	$(pdftexd.h-with_synctex)
pdftexextra.c: pdftexd.h $(pdftexdir)/pdftexextra.h lib/texmfmp.c
	test -d $(pdftexdir) || mkdir $(pdftexdir)
	sed s/TEX-OR-MF-OR-MP/pdftex/ $(srcdir)/lib/texmfmp.c >$@
$(pdftexdir)/pdftexextra.h: $(pdftexdir)/pdftexextra.in $(pdftexdir)/pdftex.version etexdir/etex.version
	test -d $(pdftexdir) || mkdir $(pdftexdir)
	sed -e s/PDFTEX-VERSION/`cat $(pdftexdir)/pdftex.version`/ \
	    -e s/ETEX-VERSION/`cat etexdir/etex.version`/ \
	  $(srcdir)/$(pdftexdir)/pdftexextra.in >$@
pdftex-pool.c: pdftex.pool $(makecpool)
	$(makecpool) pdftex.pool pdftexdir/ptexlib.h >$@ || rm -f $@

# Tangling
pdftex.p pdftex.pool: tangle $(srcdir)/$(pdftexdir)/pdftex.web pdftex.ch
	$(TANGLE) $(srcdir)/$(pdftexdir)/pdftex.web pdftex.ch

#   Sources for pdftex.ch:
pdftex_ch_srcs = $(srcdir)/$(pdftexdir)/pdftex.web \
  $(srcdir)/$(pdftexdir)/tex.ch0 \
  $(srcdir)/tex.ch \
  $(pdftex_ch_srcs-with_synctex) \
  $(srcdir)/$(pdftexdir)/pdftex.ch
#   Rules:
pdftex.ch: $(TIE) $(pdftex_ch_srcs)
	$(TIE) -c pdftex.ch $(pdftex_ch_srcs)

# pdfetex: (it's just a copy of pdftex)
pdfetex: pdftex
	cp -p pdftex pdfetex
pdfetex.pool: pdftex.pool
	cp -p pdftex.pool pdfetex.pool

# for developing only
pdftex-org.web: $(TIE) $(pdftex_ch_srcs_org)
	$(TIE) -m $@ $(pdftex_ch_srcs_org)
pdftex-all.web: $(TIE) $(srcdir)/$(pdftexdir)/pdftex.web pdftex.ch
	$(TIE) -m $@ $(srcdir)/$(pdftexdir)/pdftex.web pdftex.ch
pdftex-all.tex: pdftex-all.web
	$(WEAVE) pdftex-all.web
	{ echo '1s/ webmac/ pdfwebmac/'; echo w; echo q;} | ed $@ >/dev/null 2>&1
pdftex-all.pdf: pdftex-all.tex
	$(pdftex) pdftex-all.tex

check:  pdftex-check
pdftex-check: pdftex pdftex.fmt

clean:: pdftex-clean
pdftex-clean:
	$(LIBTOOL) --mode=clean $(RM) pdftex
	rm -f $(pdftex_o) $(pdftex_c) pdftexextra.c pdftexcoerce.h
	rm -f $(pdftexdir)/pdftexextra.h
	rm -f pdftexd.h pdftex.p pdftex.pool pdftex.ch
	rm -f pdftex.fmt pdftex.log

# Dumps
all_pdfefmts =  pdfetex.fmt $(pdfefmts)

dumps:  pdfefmts
pdfefmts: $(all_pdfefmts)

pdfefmtdir = $(web2cdir)/pdfetex
$(pdfefmtdir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(pdfefmtdir)

pdfetex.fmt: pdfetex
	$(dumpenv) $(MAKE) progname=pdfetex files="etex.src plain.tex cmr10.tfm" prereq-check
	$(dumpenv) ./pdfetex --progname=pdfetex --jobname=pdfetex --ini \*\\pdfoutput=1\\input etex.src \\dump </dev/null

pdflatex.fmt: pdftex
	$(dumpenv) $(MAKE) progname=pdflatex files="latex.ltx" prereq-check
	$(dumpenv) ./pdftex --progname=pdflatex --jobname=pdflatex --ini \*\\pdfoutput=1\\input latex.ltx </dev/null

# 
# Installation.
install-pdftex: install-pdftex-exec
install-programs:  install-pdftex-exec
install-pdftex-exec: $(pdftex) $(bindir)
	for p in pdftex; do $(INSTALL_LIBTOOL_PROG) $$p $(bindir); done

# 
# ttf2afm
ttf2afm = ttf2afm

ttf2afm: ttf2afm.o
	$(kpathsea_link) ttf2afm.o $(kpathsea)
ttf2afm.o: ttf2afm.c macnames.c
	$(compile) -c $< -o $@
ttf2afm.c: $(srcdir)/$(pdftexdir)/ttf2afm.c
	cp $(srcdir)/$(pdftexdir)/ttf2afm.c .
macnames.c: $(srcdir)/$(pdftexdir)/macnames.c
	cp $(srcdir)/$(pdftexdir)/macnames.c .
check: ttf2afm-check
ttf2afm-check: ttf2afm
clean:: ttf2afm-clean
ttf2afm-clean:
	$(LIBTOOL) --mode=clean $(RM) ttf2afm
	rm -f ttf2afm.o macnames.o
	rm -f ttf2afm.c macnames.c
# 
# pdftosrc
pdftosrc = pdftosrc

pdftosrc: $(pdftexdir)/pdftosrc.o $(LIBXPDFDEP)
	$(kpathsea_cxx_link) $(pdftexdir)/pdftosrc.o $(LDLIBXPDF) -lm 
$(pdftexdir)/pdftosrc.o:$(srcdir)/$(pdftexdir)/pdftosrc.cc
	cd $(pdftexdir) && $(MAKE) pdftosrc.o
check: pdftosrc-check
pdftosrc-check: pdftosrc
clean:: pdftosrc-clean
pdftosrc-clean:
	$(LIBTOOL) --mode=clean $(RM) pdftosrc
# 
# pdftex binaries archive
pdftexbin:
	$(MAKE) $(pdftex_bin)

pdftex-cross:
	$(MAKE) pdftex-web2c-cross
	$(MAKE) pdftexbin

pdftex-web2c-cross: $(web2c_programs)
	@if test ! -x $(linux_build_dir)/tangle; then echo Error: linux_build_dir not ready; exit -1; fi
	rm -f web2c/fixwrites web2c/splitup web2c/web2c
	cp -f $(linux_build_dir)/web2c/fixwrites web2c
	cp -f $(linux_build_dir)/web2c/splitup web2c
	cp -f $(linux_build_dir)/web2c/web2c web2c
	touch web2c/fixwrites web2c/splitup web2c/web2c
	$(MAKE) tangleboot && rm -f tangleboot && \
	cp -f $(linux_build_dir)/tangleboot .  && touch tangleboot
	$(MAKE) ctangleboot && rm -f ctangleboot && \
	cp -f $(linux_build_dir)/ctangleboot .  && touch ctangleboot
	$(MAKE) ctangle && rm -f ctangle && \
	cp -f $(linux_build_dir)/ctangle .  && touch ctangle
	$(MAKE) tie && rm -f tie && \
	cp -f $(linux_build_dir)/tie .  && touch tie
	$(MAKE) tangle && rm -f tangle && \
	cp -f $(linux_build_dir)/tangle .  && touch tangle

# vim: set noexpandtab
# end of pdftex.mk
# Makefile fragment for XeTeX and web2c. -- Jonathan Kew -- Public domain.
# This fragment contains the parts of the makefile that are most likely to
# differ between releases of XeTeX.

Makefile: $(srcdir)/xetexdir/xetex.mk

# this should probably move to common.mk some day,
# but need to check possible effect on other programs
ALL_CXXFLAGS = -g -O2

# We build xetex unless configure decides to skip it
xetex =  xetex

### Platform-specific defines and files to be built

# On Mac OS X:
#!  xetex_platform_o = XeTeX_mac.o XeTeXFontMgr_Mac.o
#!  xetex_platform_layout_o = XeTeXFontInst_Mac.o XeTeXFontInst_FT2.o
#!  xetex_platform_layout_cxx = XeTeXFontInst_Mac.cpp XeTeXFontInst_FT2.cpp
#!  xetex_images_o =

#!  XETEX_DEFINES = -DXETEX_MAC

#!  EXTRALIBS = -framework Carbon -framework Cocoa -framework QuickTime

#!  EXTRADEPS = 

# On non-Mac platforms:
 xetex_platform_o = XeTeXFontMgr_FC.o
 xetex_platform_layout_o = XeTeXFontInst_FT2.o
 xetex_platform_layout_cxx = XeTeXFontInst_FT2.cpp
 xetex_images_o = mfileio.o numbers.o pdfimage.o bmpimage.o jpegimage.o pngimage.o XeTeX_pic.o

 XETEX_DEFINES = -DXETEX_OTHER

 EXTRALIBS = $(LIBXPDFDIR)/xpdf/libxpdf.a $(LIBXPDFDIR)/goo/libGoo.a $(LIBXPDFDIR)/fofi/libfofi.a $(LIBPNGDIR)/libpng.a -lfontconfig

 EXTRADEPS = $(LIBXPDFDIR)/xpdf/libxpdf.a $(LIBXPDFDIR)/goo/libGoo.a $(LIBXPDFDIR)/fofi/libfofi.a $(LIBPNGDIR)/libpng.a

### is Graphite support included?

 xetex_graphite_layout_o = XeTeXGrLayout.o
 XETEX_GRAPHITE = -DXETEX_GRAPHITE

 GRAPHITEDIR = ../../libs/graphite-engine
 GRAPHITESRCDIR = $(srcdir)/$(GRAPHITEDIR)

 GRAPHITEFLAGS = -I$(GRAPHITESRCDIR)/include
 LDGRAPHITE = $(GRAPHITEDIR)/src/.libs/libgraphite.a
 GRAPHITEDEP = $(GRAPHITEDIR)/src/.libs/libgraphite.a

### end of platform-specific setup

LDLIBXPDF=$(LIBXPDFDIR)/xpdf/libxpdf.a $(LIBXPDFDIR)/goo/libGoo.a $(LIBXPDFDIR)/fofi/libfofi.a
LIBXPDFCPPFLAGS=-I$(LIBXPDFDIR) -I$(LIBXPDFDIR)/xpdf -I$(LIBXPDFDIR)/goo -I$(LIBXPDFDIR)/fofi -I$(LIBXPDFSRCDIR) -I$(LIBXPDFSRCDIR)/xpdf -I$(LIBXPDFSRCDIR)/goo -I$(LIBXPDFSRCDIR)/fofi
LIBXPDFDEP=$(LIBXPDFDIR)/xpdf/libxpdf.a $(LIBXPDFDIR)/goo/libGoo.a $(LIBXPDFDIR)/fofi/libfofi.a

LIBXPDFDIR=../../libs/xpdf
LIBXPDFSRCDIR=$(srcdir)/$(LIBXPDFDIR)

LDLIBPNG=$(LIBPNGDIR)/libpng.a
LIBPNGCPPFLAGS=-I$(LIBPNGDIR) -I$(LIBPNGSRCDIR)
LIBPNGDEP=$(LIBPNGDIR)/libpng.a

LIBPNGDIR=../../libs/libpng
LIBPNGSRCDIR=$(srcdir)/$(LIBPNGDIR)

LDFREETYPE2 = $(FREETYPE2DIR)/.libs/libfreetype.a
FTFLAGS =  -I$(FREETYPE2SRCDIR)/include
FREETYPE2DEP = $(FREETYPE2DIR)/.libs/libfreetype.a

FREETYPE2DIR = ../../libs/freetype2
FREETYPE2SRCDIR = $(srcdir)/$(FREETYPE2DIR)

TECKITFLAGS = -I$(TECKITSRCDIR)/source/Public-headers
LDTECKIT = $(TECKITDIR)/lib/.libs/libTECkit.a
TECKITDEP = $(TECKITDIR)/lib/.libs/libTECkit.a

TECKITDIR=../../libs/teckit
TECKITSRCDIR=$(srcdir)/$(TECKITDIR)

ICUFLAGS = -I$(ICUDIR)/common -I$(ICUSRCDIR)/common -I$(ICUSRCDIR)/layout
LDICU = $(ICUDIR)/lib/libsicuuc.a $(ICUDIR)/lib/libsicule.a $(ICUDIR)/lib/libsicudata.a
ICUDEP = $(ICUDIR)/lib/libsicuuc.a $(ICUDIR)/lib/libsicule.a $(ICUDIR)/lib/libsicudata.a

ICUDIR=../../libs/icu-xetex
ICUSRCDIR=$(srcdir)/$(ICUDIR)

ICUCFLAGS = -I$(ICUDIR)/common -I$(ICUSRCDIR)/common -I$(ICUSRCDIR)/layout -DLE_USE_CMEMORY

ZLIBCPPFLAGS = -I$(ZLIBDIR) -I$(ZLIBSRCDIR)
LDZLIB = $(ZLIBDIR)/libz.a

ZLIBDIR = ../../libs/zlib
ZLIBSRCDIR = $(srcdir)/$(ZLIBDIR)

FONTCONFIGCPPFLAGS = 
FONTCONFIGLDFLAGS  = 

xetexlibs = $(LDICU) $(LDTECKIT) $(LDFREETYPE2) $(LDGRAPHITE) $(LDZLIB)

# Font-related headers
XeTeXFontHdrs = \
	$(srcdir)/xetexdir/FontTableCache.h \
	$(srcdir)/xetexdir/XeTeXFontInst.h \
	$(srcdir)/xetexdir/XeTeXFontInst_FT2.h \
	$(srcdir)/xetexdir/XeTeXFontInst_Mac.h \
	$(srcdir)/xetexdir/XeTeXFontMgr.h \
	$(srcdir)/xetexdir/XeTeXFontMgr_FC.h \
	$(srcdir)/xetexdir/XeTeXFontMgr_Mac.h \
	$(srcdir)/xetexdir/XeTeXLayoutInterface.h \
	$(srcdir)/xetexdir/XeTeXOTLayoutEngine.h
	
# Image-related headers
XeTeXImageHdrs = \
	$(srcdir)/xetexdir/bmpimage.h \
	$(srcdir)/xetexdir/jpegimage.h \
	$(srcdir)/xetexdir/pdfimage.h \
	$(srcdir)/xetexdir/pngimage.h

# Extract xetex version
xetexdir/xetex.version: $(srcdir)/xetexdir/xetex.ch
	test -d xetexdir || mkdir xetexdir
	grep '^@d XeTeX_version_string==' $(srcdir)/xetexdir/xetex.ch \
	  | sed "s/^.*'-//;s/'.*$$//" >xetexdir/xetex.version

# Extract etex version
xetexdir/etex.version: $(srcdir)/etexdir/etex.ch
	test -d xetexdir || mkdir xetexdir
	grep '^@d eTeX_version_string==' $(srcdir)/etexdir/etex.ch \
	  | sed "s/^.*'-//;s/'.*$$//" >xetexdir/etex.version

# The C sources.
xetex_c = xetexini.c xetex0.c xetex1.c xetex2.c
xetex_o = xetexini.o xetex0.o xetex1.o xetex2.o xetexextra.o
xetex_add_o = trans.o XeTeX_ext.o xetex_pool.o $(xetex_platform_o) $(xetex_o-with_synctex)

# these compilations require the path to TECkit headers;
# just setting it in XCFLAGS doesn't seem to work when we're called
# recursively from "make world" etc
xetexini.o: xetexini.c $(srcdir)/xetexdir/XeTeX_ext.h
	$(compile) $(TECKITFLAGS) $(FTFLAGS) $(ALL_CFLAGS) $(XETEX_DEFINES) -c $< -o $@
xetex0.o: xetex0.c $(srcdir)/xetexdir/XeTeX_ext.h
	$(compile) $(TECKITFLAGS) $(FTFLAGS) $(ALL_CFLAGS) $(XETEX_DEFINES) -c $< -o $@
xetex1.o: xetex1.c $(srcdir)/xetexdir/XeTeX_ext.h
	$(compile) $(TECKITFLAGS) $(FTFLAGS) $(ALL_CFLAGS) $(XETEX_DEFINES) -c $< -o $@
xetex2.o: xetex2.c $(srcdir)/xetexdir/XeTeX_ext.h
	$(compile) $(TECKITFLAGS) $(FTFLAGS) $(ALL_CFLAGS) $(XETEX_DEFINES) -c $< -o $@
xetexextra.o: xetexextra.c $(srcdir)/xetexdir/XeTeX_ext.h
	$(compile) $(TECKITFLAGS) $(FTFLAGS) $(ALL_CFLAGS) $(XETEX_DEFINES) -c $< -o $@
xetex_pool.o: xetex_pool.c $(srcdir)/xetexdir/XeTeX_ext.h
	$(compile) $(TECKITFLAGS) $(FTFLAGS) $(ALL_CFLAGS) $(XETEX_DEFINES) -c $< -o $@

# image support
mfileio.o: $(srcdir)/xetexdir/mfileio.c $(srcdir)/xetexdir/mfileio.h
	$(compile) $(ALL_CFLAGS) $(FTFLAGS) -c $< -o $@

numbers.o: $(srcdir)/xetexdir/numbers.c $(srcdir)/xetexdir/numbers.h
	$(compile) $(ALL_CFLAGS) $(FTFLAGS) -c $< -o $@

bmpimage.o: $(srcdir)/xetexdir/bmpimage.c $(srcdir)/xetexdir/bmpimage.h
	$(compile) $(ALL_CFLAGS) $(FTFLAGS) -c $< -o $@

jpegimage.o: $(srcdir)/xetexdir/jpegimage.c $(srcdir)/xetexdir/jpegimage.h
	$(compile) $(ALL_CFLAGS) $(FTFLAGS) -c $< -o $@

pngimage.o: $(srcdir)/xetexdir/pngimage.c $(srcdir)/xetexdir/pngimage.h
	$(compile) $(ALL_CFLAGS) $(FTFLAGS) $(LIBPNGCPPFLAGS) $(ZLIBCPPFLAGS) -c $< -o $@

pdfimage.o: $(srcdir)/xetexdir/pdfimage.cpp $(srcdir)/xetexdir/pdfimage.h
	$(CXX) $(ALL_CFLAGS) $(FTFLAGS) $(LIBXPDFCPPFLAGS) -c $< -o $@

XeTeX_pic.o: $(srcdir)/xetexdir/XeTeX_pic.c $(srcdir)/xetexdir/XeTeX_ext.h $(XeTeXImageHdrs)
	$(compile) $(TECKITFLAGS) $(FTFLAGS) $(ALL_CFLAGS) $(XETEX_DEFINES) -c $< -o $@

# Layout library
xetex_ot_layout_o = \
		XeTeXFontMgr.o \
		XeTeXLayoutInterface.o XeTeXOTLayoutEngine.o \
		XeTeXFontInst.o cmaps.o FontTableCache.o \
		XeTeXOTMath.o \
		$(xetex_graphite_layout_o) \
		$(xetex_platform_layout_o) 

XeTeXLayoutInterface.o: $(srcdir)/xetexdir/XeTeXLayoutInterface.cpp $(XeTeXFontHdrs)
	$(CXX) $(ICUCFLAGS) $(FTFLAGS) $(GRAPHITEFLAGS) $(FONTCONFIGCPPFLAGS) $(ALL_CXXFLAGS) $(XETEX_DEFINES) $(XETEX_GRAPHITE) -c $< -o $@
XeTeXOTLayoutEngine.o: $(srcdir)/xetexdir/XeTeXOTLayoutEngine.cpp $(XeTeXFontHdrs)
	$(CXX) $(ICUCFLAGS) $(FTFLAGS) $(FONTCONFIGCPPFLAGS) $(ALL_CXXFLAGS) $(XETEX_DEFINES) -c $< -o $@

XeTeXFontMgr.o: $(srcdir)/xetexdir/XeTeXFontMgr.cpp  $(XeTeXFontHdrs)
	$(CXX) $(ICUCFLAGS) $(FTFLAGS) $(FONTCONFIGCPPFLAGS) $(ALL_CXXFLAGS) $(XETEX_DEFINES) -c $< -o $@
XeTeXFontMgr_FC.o: $(srcdir)/xetexdir/XeTeXFontMgr_FC.cpp  $(XeTeXFontHdrs)
	$(CXX) $(ICUCFLAGS) $(FTFLAGS) $(FONTCONFIGCPPFLAGS) $(ALL_CXXFLAGS) $(XETEX_DEFINES) -c $< -o $@

XeTeXFontMgr_Mac.o: $(srcdir)/xetexdir/XeTeXFontMgr_Mac.mm  $(XeTeXFontHdrs)
	$(CXX) -ObjC++ $(ICUCFLAGS) $(FTFLAGS) $(ALL_CXXFLAGS) $(XETEX_DEFINES) -c $< -o $@

cmaps.o: $(srcdir)/xetexdir/cmaps.cpp
	$(CXX) $(ICUCFLAGS) $(ALL_CXXFLAGS) $(XETEX_DEFINES) -c $< -o $@
FontTableCache.o: $(srcdir)/xetexdir/FontTableCache.cpp
	$(CXX) $(ICUCFLAGS) $(ALL_CXXFLAGS) $(XETEX_DEFINES) -c $< -o $@

XeTeXFontInst.o: $(srcdir)/xetexdir/XeTeXFontInst.cpp $(XeTeXFontHdrs)
	$(CXX) $(ICUCFLAGS) $(FTFLAGS) $(FONTCONFIGCPPFLAGS) $(ALL_CXXFLAGS) $(XETEX_DEFINES) -c $< -o $@
XeTeXFontInst_Mac.o: $(srcdir)/xetexdir/XeTeXFontInst_Mac.cpp $(XeTeXFontHdrs)
	$(CXX) $(ICUCFLAGS) $(ALL_CXXFLAGS) $(XETEX_DEFINES) -c $< -o $@
XeTeXFontInst_FT2.o: $(srcdir)/xetexdir/XeTeXFontInst_FT2.cpp $(XeTeXFontHdrs)
	$(CXX) $(ICUCFLAGS) $(FTFLAGS) $(FONTCONFIGCPPFLAGS) $(ALL_CXXFLAGS) $(XETEX_DEFINES) -c $< -o $@

XeTeXOTMath.o: $(srcdir)/xetexdir/XeTeXOTMath.cpp $(XeTeXFontHdrs)
	$(CXX) $(ICUCFLAGS) $(FTFLAGS) $(FONTCONFIGCPPFLAGS) $(ALL_CXXFLAGS) $(XETEX_DEFINES) -c $< -o $@

XeTeXGrLayout.o: $(srcdir)/xetexdir/XeTeXGrLayout.cpp $(srcdir)/xetexdir/XeTeXGrLayout.h \
		$(XeTeXFontHdrs) $(GRAPHITESRCDIR)/include/graphite/Font.h
	$(CXX) $(ICUCFLAGS) $(FTFLAGS) $(FONTCONFIGCPPFLAGS) $(GRAPHITEFLAGS) $(ALL_CXXFLAGS) $(XETEX_DEFINES) -c $< -o $@

# special rules for files that need the TECkit headers as well
XeTeX_ext.o: $(srcdir)/xetexdir/XeTeX_ext.c xetexd.h
	$(compile) $(ICUCFLAGS) $(FTFLAGS) $(TECKITFLAGS) $(LIBPNGCPPFLAGS) $(LIBXPDFCPPFLAGS) $(ZLIBCPPFLAGS) $(ALL_CFLAGS) $(XETEX_DEFINES) $(XETEX_GRAPHITE) -c $< -o $@
XeTeX_mac.o: $(srcdir)/xetexdir/XeTeX_mac.c xetexd.h
	$(compile) $(ICUCFLAGS) $(TECKITFLAGS) $(ALL_CFLAGS) $(XETEX_DEFINES) -c $< -o $@

trans.o: $(srcdir)/xetexdir/trans.c
	$(compile) $(ALL_CFLAGS) $(XETEX_DEFINES) -c $< -o $@

# sync
synctex-xe.o: synctex-xe.c
	$(compile) $(ALL_CFLAGS) $(TECKITFLAGS) $(FTFLAGS) $(XETEX_DEFINES) -c $< -o $@

# Making xetex.
xetex: $(xetex_o) $(xetex_add_o) $(xetex_images_o) $(xetex_ot_layout_o) \
		$(GRAPHITEDEP) $(TECKITDEP) $(FREETYPE2DEP) $(ICUDEP) $(EXTRADEPS)
	$(kpathsea_cxx_link) $(xetex_o) $(xetex_add_o) $(xetex_images_o) $(xetex_ot_layout_o) \
	$(FONTCONFIGLDFLAGS) $(socketlibs) $(xetexlibs) $(EXTRALIBS) \
	$(LOADLIBES)  -pthread 

# C file dependencies
$(xetex_c) xetexcoerce.h xetexd.h: xetex.p $(web2c_texmf)
	$(web2c) xetex
	$(xetexd.h-with_synctex)

xetexextra.c: xetexd.h lib/texmfmp.c xetexdir/xetexextra.h
	sed s/TEX-OR-MF-OR-MP/xetex/ $(srcdir)/lib/texmfmp.c >$@
xetexdir/xetexextra.h: xetexdir/xetexextra.in xetexdir/xetex.version xetexdir/etex.version
	test -d xetexdir || mkdir xetexdir
	sed -e s/XETEX-VERSION/`cat xetexdir/xetex.version`/ \
	    -e s/ETEX-VERSION/`cat xetexdir/etex.version`/ \
	  $(srcdir)/xetexdir/xetexextra.in >$@

xetex_pool.c: xetex.pool
	perl $(srcdir)/xetexdir/pool2c.pl $< $@

# Tangling
xetex.p xetex.pool: ./otangle xetex.web
	./otangle xetex.web

# Generation of the web file.
#   Sources for xetex.web:
xetex_web_srcs = $(srcdir)/tex.web \
  $(srcdir)/etexdir/etex.ch \
  $(srcdir)/etexdir/tex.ch0 \
  $(srcdir)/tex.ch \
  $(srcdir)/etexdir/tex.ch1 \
  $(srcdir)/etexdir/tex.ech \
  $(xetex_ch_srcs-with_synctex) \
  $(srcdir)/xetexdir/xetex.ch \
  $(xetex_post_ch_srcs-with_synctex)
xetex.web: tie xetexdir/xetex.mk $(xetex_web_srcs)
	$(TIE) -m xetex.web $(xetex_web_srcs)

################## FIXME: the rest of this isn't properly updated for xetex yet...
##################        e.g., we don't have real xetex tests to run!

# Tests...
#check:  xetex-check
#xetex-check: etrip xetex.fmt
# Test truncation (but don't bother showing the warning msg).
#	./xetex --progname=xetex --output-comment="`cat $(srcdir)/PROJECTS`" \
#	  $(srcdir)/tests/hello 2>/dev/null \
#	  && ./dvitype hello.dvi | grep olaf@infovore.xs4all.nl >/dev/null
# \openout should show up in \write's.
#	./xetex --progname=xetex $(srcdir)/tests/openout && grep xfoo openout.log
# one.two.tex -> one.two.log
#	./xetex --progname=xetex $(srcdir)/tests/one.two && ls -l one.two.log
# uno.dos -> uno.log
#	./xetex --progname=xetex $(srcdir)/tests/uno.dos && ls -l uno.log
#	./xetex --progname=xetex $(srcdir)/tests/just.texi && ls -l just.log
#	-./xetex --progname=xetex $(srcdir)/tests/batch.tex
#	./xetex --progname=xetex --shell $(srcdir)/tests/write18 | grep echo
#	./xetex --mltex --progname=xeinitex $(srcdir)/tests/mltextst
#	-./xetex --progname=xetex </dev/null
#	-PATH=`pwd`:$(kpathsea_dir):$(kpathsea_srcdir):$$PATH \
#	  WEB2C=$(kpathsea_srcdir) TMPDIR=.. \
#	  ./xetex --progname=xetex '\nonstopmode\font\foo=nonesuch\end'

# Cleaning up.
clean:: xetex-clean
xetex-clean: # etrip-clean
	$(LIBTOOL) --mode=clean $(RM) xetex
	rm -f $(xetex_o) $(xetex_c) xetexextra.c xetex_pool.c xetexcoerce.h xetexd.h
	rm -f xetexdir/xetexextra.h xetexdir/xetex.version
	rm -f xetex.p xetex.pool xetex.web
	rm -f xetex.fmt xetex.log
	rm -f hello.dvi hello.log xfoo.out openout.log one.two.log uno.log
	rm -f just.log batch.log write18.log mltextst.log texput.log
	rm -f missfont.log
	rm -rf tfm

# Dumps
all_xefmts = xetex.fmt $(xefmts)

dumps:  xefmts
xefmts: $(all_xefmts)

xefmtdir = $(web2cdir)/xetex
$(xefmtdir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs ${DESTDIR}$(xefmtdir)

xetex.fmt: xetex
	$(dumpenv) $(MAKE) progname=xetex files="xetex.ini unicode-letters.tex plain.tex cmr10.tfm" prereq-check
	$(dumpenv) ./xetex --progname=xetex --jobname=xetex --ini \*\\input xetex.ini \\dump </dev/null

xelatex.fmt: xetex
	$(dumpenv) $(MAKE) progname=xelatex files="xelatex.ini unicode-letters.tex latex.ltx" prereq-check
	$(dumpenv) ./xetex --progname=xelatex --jobname=xelatex --ini \*\\input xelatex.ini </dev/null

# 
# Installation.
install-xetex: install-xetex-exec
install-programs:  install-xetex-programs
install-xetex-programs: xetex $(bindir)
	for p in xetex; do $(INSTALL_LIBTOOL_PROG) $$p ${DESTDIR}$(bindir); done

# end of xetex.mk
# Makefile fragment for pdfeTeX and web2c. --infovore@xs4all.nl. Public domain.
# This fragment contains the parts of the makefile that are most likely to
# differ between releases of pdfeTeX.

# We build luatex
luatex =  luatex
luatexdir = luatexdir

# libz
ZLIBDIR=../../libs/zlib
ZLIBSRCDIR=$(srcdir)/$(ZLIBDIR)
# libpng
LIBPNGDIR=../../libs/libpng
LIBPNGSRCDIR=$(srcdir)/$(LIBPNGDIR)
# libxpdf
LIBXPDFDIR=../../libs/xpdf
LIBXPDFSRCDIR=$(srcdir)/$(LIBXPDFDIR)
# libobsdcompa
LIBOBSDCOMPATDIR=../../libs/obsdcompat
LIBOBSDCOMPATFSRCDIR=$(srcdir)/$(LIBOBSDCOMPATDIR)

XCPPFLAGS=-I$(LIBOBSDCOMPATDIR) -I$(LIBOBSDCOMPATDIR)/.. -I$(LIBOBSDCOMPATFSRCDIR) -I$(LIBOBSDCOMPATFSRCDIR)/..  -I$(ZLIBSRCDIR) -I$(LIBPNGSRCDIR) -I$(LIBXPDFSRCDIR) -Dextra_version_info=`date +-%Y%m%d%H`

Makefile: $(srcdir)/$(luatexdir)/luatex.mk

# luatex_bin = luatex ttf2afm pdftosrc
luatex_bin = luatex
linux_build_dir = $(HOME)/luatex/build/linux/texk/web2c


# Extract luatex version
$(luatexdir)/luatex.version: $(srcdir)/$(luatexdir)/luatex.web
	test -d $(luatexdir) || mkdir $(luatexdir)
	grep '^@d luatex_version_string==' $(srcdir)/$(luatexdir)/luatex.web \
	  | sed "s/^.*=='//;s/' .*$$//" \
	  >$(luatexdir)/luatex.version

# The C sources.
luatex_c = luatexini.c luatex0.c luatex1.c luatex2.c luatex3.c
luatex_o = luatexini.o luatex0.o luatex1.o luatex2.o luatex3.o luatexextra.o loadpool.o

# Making luatex
luatex: luatexd.h $(luatex_o) $(luatexextra_o) $(luatexlibsdep)
	$(kpathsea_cxx_link) $(luatex_o) $(luatexextra_o) $(luatexlibs) $(socketlibs) $(LOADLIBES) 

# C file dependencies.
$(luatex_c) luatexcoerce.h luatexd.h: luatex.p $(web2c_texmf) $(srcdir)/$(luatexdir)/luatex.defines $(srcdir)/$(luatexdir)/luatex.h
	$(web2c) luatex
luatexextra.c: $(luatexdir)/luatexextra.h lib/texmfmp.c
	test -d $(luatexdir) || mkdir $(luatexdir)
	sed s/TEX-OR-MF-OR-MP/luatex/ $(srcdir)/lib/texmfmp.c >$@
$(luatexdir)/luatexextra.h: $(luatexdir)/luatexextra.in $(luatexdir)/luatex.version
	test -d $(luatexdir) || mkdir $(luatexdir)
	sed -e s/LUATEX-VERSION/`cat $(luatexdir)/luatex.version`/ \
	  $(srcdir)/$(luatexdir)/luatexextra.in >$@
loadpool.c: luatex.pool $(makecpool)
	$(makecpool) luatex.pool luatexdir/ptexlib.h >$@ || rm -f $@

# luatangle we need a private version of tangle

luatangle: luatangle.o
	$(kpathsea_link) luatangle.o $(LOADLIBES)

luatangle.c luatangle.h: luatangle.p
	$(web2c) luatangle

luatangle.p: tangle $(srcdir)/$(luatexdir)/luatangle.web $(srcdir)/$(luatexdir)/luatangle.ch
	$(TANGLE) $(srcdir)/$(luatexdir)/luatangle.web $(srcdir)/$(luatexdir)/luatangle.ch

# Tangling
luatex.p luatex.pool: luatangle $(srcdir)/$(luatexdir)/luatex.web $(srcdir)/$(luatexdir)/luatex.ch
	$(native)/luatangle --underlines $(srcdir)/$(luatexdir)/luatex.web $(srcdir)/$(luatexdir)/luatex.ch

#   Sources for luatex.ch:
#luatex_ch_srcs = $(srcdir)/$(luatexdir)/luatex.web \
#  $(srcdir)/$(luatexdir)/lua.ch \
#  $(srcdir)/$(luatexdir)/lua.ch0

#   Rules:
#luatex.ch: $(TIE) $(luatex_ch_srcs)
#	$(TIE) -c luatex.ch $(luatex_ch_srcs)

# for developing only
#luatex-org.web: $(TIE) $(luatex_ch_srcs_org)
#	$(TIE) -m $@ $(luatex_ch_srcs_org)
#luatex-all.web: $(TIE) $(srcdir)/$(luatexdir)/luatex.web luatex.ch
#	$(TIE) -m $@ $(srcdir)/$(luatexdir)/luatex.web luatex.ch
#luatex-all.tex: luatex-all.web
#	$(WEAVE) luatex-all.web
#	echo -e '1s/ webmac/ pdfwebmac/\nw\nq' | ed $@ >/dev/null 2>&1
#luatex-all.pdf: luatex-all.tex
#	$(luatex) luatex-all.tex

check:  luatex-check
luatex-check: luatex luatex.fmt

clean:: luatex-clean
luatex-clean:
	$(LIBTOOL) --mode=clean $(RM) luatex
	rm -f $(luatex_o) $(luatex_c) luatexextra.c luatexcoerce.h
	rm -f $(luatexdir)/luatexextra.h
	rm -f luatexd.h luatex.p luatex.pool luatex.ch strpool.c
	rm -f luatex.fmt luatex.log

# Dumps
all_luafmts =  luatex.fmt $(luafmts)

dumps:  luafmts
luafmts: $(all_luafmts)

luafmtdir = $(web2cdir)/luatex
$(luafmtdir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(luafmtdir)

luatex.fmt: luatex
	$(dumpenv) $(MAKE) progname=luatex files="etex.src plain.tex cmr10.tfm" prereq-check
	$(dumpenv) ./luatex --progname=luatex --jobname=luatex --ini \*\\pdfoutput=1\\input etex.src \\dump </dev/null

# 
# Installation.
install-luatex: install-luatex-exec

install-programs:  install-luatex-exec
install-luatex-exec: $(luatex) $(bindir)
	for p in luatex; do $(INSTALL_LIBTOOL_PROG) $$p $(bindir); done
	cd $(DESTDIR)$(bindir) && rm -f texlua && $(LN) luatex texlua
	cd $(DESTDIR)$(bindir) && rm -f texluac && $(LN) luatex texluac

# 
# luatex binaries archive
luatexbin:
	$(MAKE) $(luatex_bin)

luatex-cross:
	$(MAKE) luatex-web2c-cross
	$(MAKE) luatexbin

luatex-web2c-cross: $(web2c_programs)
	@if test ! -x $(linux_build_dir)/luatangle; then echo Error: linux_build_dir not ready; exit -1; fi
	rm -f web2c/fixwrites web2c/splitup web2c/web2c
	cp -f $(linux_build_dir)/web2c/fixwrites web2c
	cp -f $(linux_build_dir)/web2c/splitup web2c
	cp -f $(linux_build_dir)/web2c/web2c web2c
	touch web2c/fixwrites web2c/splitup web2c/web2c
	$(MAKE) tangleboot && rm -f tangleboot && \
	cp -f $(linux_build_dir)/tangleboot .  && touch tangleboot
	$(MAKE) ctangleboot && rm -f ctangleboot && \
	cp -f $(linux_build_dir)/ctangleboot .  && touch ctangleboot
	$(MAKE) ctangle && rm -f ctangle && \
	cp -f $(linux_build_dir)/ctangle .  && touch ctangle
	$(MAKE) tie && rm -f tie && \
	cp -f $(linux_build_dir)/tie .  && touch tie
	$(MAKE) luatangle && rm -f luatangle && \
	cp -f $(linux_build_dir)/luatangle .  && touch luatangle

# vim: set noexpandtab
# end of luatex.mk

# 
# non-engine programs.
programs = bibtex ctangle ctie cweave dvicopy dvitomp dvitype gftodvi gftopk \
 gftype mft $(odvicopy) $(odvitype) $(otangle) patgen $(pdftosrc) \
 pktogf pktype pltotf pooltype synctex tangle tftopl tie $(ttf2afm) \
 vftovp vptovf weave

# basic_engines are the binaries we build and install directly here in
# the webdir/ directory.
# include $(metapost) from metapost.mk even though it also includes
# dvitomp.  Hopefully that doesn't hurt.
basic_engines = $(tex) $(mf) $(mfn) $(metapost)

# engines includes the ones built in subdirectories.
engines = $(basic_engines) $(etex) \
          $(omega) $(aleph) \
          $(pdftex) $(pdfetex) \
          $(xetex) $(luatex)

programs: $(programs) $(engines) $(mpware_programs) \
          $(omegafonts_programs) $(otps_programs) $(pdftosrc)

# Additional dependencies for relinking.
# Each program and engine already depends on $(web2c_programs).
$(web2c_programs) tangleboot ctangleboot: $(kpathsea) $(proglib)

# 
# Bootstrapping tangle requires making it with itself.  We use the opportunity
# to create an up-to-date tangleboot as well.
tangle: tangle.o
	$(kpathsea_link) tangle.o $(LOADLIBES)
	$(MAKE) $(common_makeargs) tangleboot.p
tangle.c tangle.h: tangle.p
	$(web2c) tangle
# tangle.p is a special case, since it is needed to compile itself.  We
# convert and compile the (distributed) tangleboot.p to make a tangle
# which we use to make the other programs.  We depend on tangleboot, even
# though we might not use it.
tangle.p: tangleboot tangle.web tangle.ch
	WEBINPUTS=.:$(srcdir) $(TANGLEBOOT) tangle tangle
tangle.web:
	@echo "You seem to be missing tangle.web, perhaps because you" >&2
	@echo "didn't retrieve web.tar.gz, only web2c.tar.gz." >&2
	@echo "You need both." >&2
	@echo >&2
	@echo "web.tar.gz should be available from the" >&2
	@echo "same place that you got web2c.tar.gz." >&2
	@echo "In any case, you can get it from" >&2
	@echo "ftp://ftp.tug.org/tex/web.tar.gz." >&2
	false
clean:: tangle-clean
tangle-clean:
	$(LIBTOOL) --mode=clean rm -f tangle
	rm -f tangle.o tangle.c tangle.h tangle.p

tangleboot: tangleboot.o
	$(kpathsea_link) tangleboot.o $(LOADLIBES)
tangleboot.c tangleboot.h: stamp-tangle $(web2c_programs) $(web2c_common)
	$(web2c) tangleboot
# tangleboot.p is in the distribution
stamp-tangle: tangleboot.p
	date >stamp-tangle
# This is not run unless tangle.web or tangle.ch is changed.
# Only try to run ./tangle if it actually exists, otherwise
# just touch tangleboot.p and build tangle.
tangleboot.p: tangle.web tangle.ch
	if [ -r $(TANGLE) ] || [ -r $(TANGLE).exe ]; then \
	  $(tangle) tangle tangle; \
	  mv tangle.p tangleboot.p; \
	elif [ -r tangleboot.p ]; then \
	  touch tangleboot.p; \
	else \
	  cp $(srcdir)/tangleboot.p .; \
	fi
	date >stamp-tangle
	$(MAKE) $(common_makeargs) tangle
clean:: tangleboot-clean
tangleboot-clean:
	$(LIBTOOL) --mode=clean rm -f tangleboot
	rm -f tangleboot.o tangleboot.c tangleboot.h

# Bootstrapping ctangle requires making it with itself.  We use the opportunity
# to create an up-to-date ctangleboot as well.
ctangle: ctangle.o cweb.o
	$(kpathsea_link) ctangle.o cweb.o $(LOADLIBES)
	$(MAKE) $(common_makeargs) ctangleboot.c cwebboot.c
# ctangle.c is a special case, since it is needed to compile itself.
ctangle.c: ctangleboot cwebdir/ctangle.w cwebdir/ctang-w2c.ch
	CWEBINPUTS=$(srcdir)/cwebdir $(CTANGLEBOOT) ctangle ctang-w2c
cweb.c: ctangleboot cwebdir/common.w cwebdir/comm-w2c.ch
	CWEBINPUTS=$(srcdir)/cwebdir $(CTANGLEBOOT) common comm-w2c cweb.c
clean:: ctangle-clean
clean:: cweb-clean
ctangle-clean:
	$(LIBTOOL) --mode=clean rm -f ctangle
	rm -f ctangle.o ctangle.c
cweb-clean:
	rm -f cweb.o cweb.c

ctangleboot: ctangleboot.o cwebboot.o
	$(kpathsea_link) ctangleboot.o cwebboot.o $(LOADLIBES)
# ctangleboot.c is in the distribution
stamp-ctangle: ctangleboot.c cwebboot.c
ctangleboot.c: cwebdir/ctangle.w cwebdir/ctang-w2c.ch
	if [ -r $(CTANGLE) ] || [ -r $(CTANGLE).exe ]; then \
	  CWEBINPUTS=$(srcdir)/cwebdir $(CTANGLE) ctangle ctang-w2c; \
	  mv ctangle.c ctangleboot.c; \
	elif [ -r ctangleboot.c ]; then \
	  touch ctangleboot.c; \
	else \
	  cp $(srcdir)/ctangleboot.c .; \
	fi
	date >stamp-ctangle
	$(MAKE) $(common_makeargs) ctangle
cwebboot.c: cwebdir/common.w cwebdir/comm-w2c.ch
	if [ -r $(CTANGLE) ] || [ -r $(CTANGLE).exe ]; then \
	  CWEBINPUTS=$(srcdir)/cwebdir $(CTANGLE) common comm-w2c cweb.c; \
	  mv cweb.c cwebboot.c; \
	elif [ -r cwebboot.c ]; then \
	  touch cwebboot.c; \
	else \
	  cp $(srcdir)/cwebboot.c .; \
	fi
	date >stamp-ctangle
	$(MAKE) $(common_makeargs) ctangle
clean:: ctangleboot-clean
clean:: cwebboot-clean
ctangleboot-clean:
	$(LIBTOOL) --mode=clean rm -f ctangleboot
	rm -f ctangleboot.o
cwebboot-clean:
	rm -f cwebboot.o

# Even web2c itself uses the library.
lib_sources = lib/alloca.c lib/basechsuffix.c lib/chartostring.c \
  lib/eofeoln.c lib/fprintreal.c lib/input2int.c lib/inputint.c lib/main.c \
  lib/openclose.c lib/printversion.c lib/uexit.c lib/usage.c lib/version.c \
  lib/zround.c 
$(proglib): $(lib_sources) stamp-auto
	cd lib && $(MAKE) $(common_makeargs)

# No exceptions in this library.
window_sources = $(srcdir)/window/*.c
$(windowlib): mfd.h $(window_sources)
	cd window && $(MAKE) $(window_makeargs)
window/trap.o: $(srcdir)/window/trap.c
	cd window && $(MAKE) $(common_makeargs) trap.o

# The web2c program consists of several executables.
web2c/fixwrites: web2c/fixwrites.c web2c/kps.c
	cd web2c && $(MAKE) $(common_makeargs) fixwrites
web2c/splitup: web2c/splitup.c web2c/kps.c
	cd web2c && $(MAKE) $(common_makeargs) splitup
web2c/web2c: web2c/main.c web2c/web2c.h web2c/web2c.l web2c/web2c.y web2c/kps.c
	cd web2c && $(MAKE) $(common_makeargs) web2c
$(makecpool): web2c/makecpool.c
	cd web2c && $(MAKE) $(common_makeargs) makecpool

# tkpathsea.mk -- target for remaking kpathsea.
# $Id: tkpathsea.mk 8409 2008-05-29 20:59:08Z karl $
makeargs = $(MFLAGS) CC='$(CC)' CFLAGS='$(CFLAGS)' $(XMAKEARGS)

# This is wrong: the library doesn't depend on kpsewhich.c or
# acconfig.h.  But what to do?
$(kpathsea): $(kpathsea_srcdir)/*.c $(kpathsea_srcdir)/*.h \
	     $(top_srcdir)/../make/paths.mk
	cd $(kpathsea_dir) && $(MAKE) $(makeargs)

$(kpathsea_dir)/paths.h: $(kpathsea_srcdir)/texmf.cnf
	cd $(kpathsea_dir) && $(MAKE) $(makeargs)
# End of tkpathsea.mk.

# 
# Making dumps.
all_fmts = tex.fmt $(fmts)
all_bases = mf.base $(bases)
all_mems = mpost.mem $(mems)

# We used to build these by default, but nowadays the dumps are created
# completely separately, e.g., at runtime by mktexfmt.  So just leave it
# as an optional extra target.
dumps: fmts bases mems
fmts: $(all_fmts)
bases: $(all_bases)
mems: $(all_mems)

tex.fmt: tex
	$(dumpenv) $(MAKE) progname=tex files="plain.tex cmr10.tfm" prereq-check
	$(dumpenv) ./tex --progname=tex --jobname=tex --ini \\input plain \\dump </dev/null

olatex.fmt: tex
	$(dumpenv) $(MAKE) progname=olatex files="latex.ltx" prereq-check
	$(dumpenv) ./tex --progname=olatex --jobname=olatex --ini \\input latex.ltx </dev/null

mltex.fmt: tex
	$(dumpenv) $(MAKE) progname=mltex files="plain.tex cmr10.tfm" prereq-check
	$(dumpenv) ./tex --mltex --progname=mltex --jobname=mltex --ini \\input plain \\dump </dev/null

mf.base: mf
	$(dumpenv) $(MAKE) progname=mf files="plain.mf cmr10.mf $(localmodes).mf" prereq-check
	$(dumpenv) ./mf --progname=mf --jobname=mf --ini \\input plain input $(localmodes) dump </dev/null

mpost.mem: mpost
	$(dumpenv) $(MAKE) progname=mpost files=plain.mp prereq-check
	$(dumpenv) ./mpost --progname=mpost --jobname=mpost --ini \\input plain dump </dev/null

# This is meant to be called recursively, with $(files) set.
prereq-check: $(kpathsea_dir)/kpsewhich
	$(kpathsea_dir)/kpsewhich --progname=$(progname) $(files) >/dev/null || $(MAKE) prereq-lose >/dev/null

prereq-lose:
	@echo "You seem to be missing input files necessary to make the" >&2
	@echo "basic formats (some or all of: $(files))." >&2
	@echo "Perhaps you've defined the default paths incorrectly, or" >&2
	@echo "perhaps you have environment variables set pointing" >&2
	@echo "to an incorrect location.  See ../kpathsea/BUGS." >&2
	@echo >&2
	@echo "If you simply do not have the files, you can" >&2
	@echo "retrieve a minimal set of input files from CTAN hosts." >&2
	false

$(kpathsea_dir)/kpsewhich: $(kpathsea)

amstex.fmt: tex
	$(dumpenv) ./tex --progname=amstex --jobname=amstex --ini amstex.ini </dev/null

# Texinfo changes the escape character from `\' to `@'.
texinfo.fmt: tex.fmt
	$(dumpenv) ./tex --progname=texinfo --jobname=texinfo --ini texinfo @dump </dev/null

eplain.fmt: tex.fmt
	touch eplain.aux # Makes cross-reference warnings work right.
	$(dumpenv) ./tex --progname=eplain --jobname=eplain --ini \&./tex eplain \\dump </dev/null

# 
install: install-exec install-data
install-exec:: install-programs

# Installation directories.
$(bindir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(bindir)
$(texpooldir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(texpooldir)
$(mfpooldir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(mfpooldir)
$(mppooldir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(mppooldir)
$(fmtdir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(fmtdir)
$(basedir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(basedir)
$(memdir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(memdir)
$(web2cdir)::
	$(SHELL) $(top_srcdir)/../mkinstalldirs $(web2cdir)

# Installing the binaries.  Each of the *dir/*.mk files (except etex)
# add to this target via a dependency-only rule, to install their
# respective engines.
install-programs: $(programs) $(basic_engines) $(bindir)
	for p in $(programs) $(basic_engines); do \
	  $(INSTALL_LIBTOOL_PROG) $$p $(bindir); done

# We do not attempt to install any of the per-format symlinks, leaving
# that to a separate run of texlinks.

# Always do plain.*, so examples from the TeXbook (etc.) will work.
# This target is not called, since it depends on the whole texmf tree,
# but we leave it for posterity.
install-fmts: install-tex-fmts
install-tex-fmts: fmts $(fmtdir)
	fmts="$(all_fmts)"; \
	  for f in $$fmts; do $(INSTALL_DATA) $$f $(fmtdir)/$$f; done
	cd $(fmtdir) && (rm -f plain.fmt; $(LN) tex.fmt plain.fmt)
	fmts="$(fmts)"; \
	  for f in $$fmts; do base=`basename $$f .fmt`; \
	    (cd $(bindir) && (rm -f $$base; $(LN) tex $$base)); done

install-bases: install-mf-bases
install-mf-bases: bases $(basedir)
	bases="$(all_bases)"; \
	  for f in $$bases; do $(INSTALL_DATA) $$f $(basedir)/$$f; done
	cd $(basedir) && (rm -f plain.base; $(LN) mf.base plain.base)
	bases="$(bases)"; \
	  for f in $$bases; do base=`basename $$f .base`;\
	    (cd $(bindir) && (rm -f $$base; $(LN) mf $$base)); done

install-mems: install-mpost-mems
install-mpost-mems: mems $(memdir)
	mems="$(all_mems)"; \
	  for f in $$mems; do $(INSTALL_DATA) $$f $(memdir)/$$f; done
	cd $(memdir) && (rm -f plain.mem; $(LN) mpost.mem plain.mem)
	mems="$(mems)"; \
	  for f in $$mems; do base=`basename $$f .mem`; \
            (cd $(bindir) && (rm -f $$base; $(LN) mpost $$base)); done

# Auxiliary files.
install-data:: $(web2cdir)
	cd doc && $(MAKE) $(install_makeargs) install-data
	cd man && $(MAKE) $(install_makeargs) install-data
	$(INSTALL_DATA) $(srcdir)/tiedir/tie.1 $(man1dir)/tie.$(manext)
	$(INSTALL_DATA) $(srcdir)/ctiedir/ctie.1 $(man1dir)/ctie.$(manext)
	$(INSTALL_DATA) $(srcdir)/synctexdir/man1/synctex.1 $(man1dir)/synctex.$(manext)
	$(INSTALL_DATA) $(srcdir)/synctexdir/man5/synctex.5 $(man5dir)/synctex.5

# Dummy target.
uninstall uninstall-exec uninstall-data:
	@echo "*** Warning: uninstall is a dummy target in web2c/Makefile"

# The distribution comes with up-to-date .info* files,
# so this should never be used unless something goes wrong
# with the unpacking, or you modify the manual.
doc/web2c.info:
	cd doc && $(MAKE) info
info dvi:
	cd doc && $(MAKE) $@

# Manual pages
manpages:
	cd man && $(MAKE) all

# 
# make dist won't work for anyone but me. Sorry.

#M#all-dist: dist web-dist etex-dist omega-dist aleph-dist pdftex-dist libs-dist
#M#
#M#distname = web2c
#M#program_files = PROJECTS *.ac *.ch tangleboot.p
#M## The files that omega places in the main directory.
#M#omega_files = omegamem.h {odvicopy,odvitype,otangle}.{web,ch}
#M#
#M#triptrapdiffs: triptrap/trip.diffs triptrap/mftrap.diffs triptrap/mptrap.diffs
#M#triptrap/trip.diffs: tex
#M#	$(MAKE) trip | tail +1 >triptrap/trip.diffs
#M#triptrap/mftrap.diffs: mf
#M#	$(MAKE) trap | tail +1 >triptrap/mftrap.diffs
#M#triptrap/mptrap.diffs: mpost
#M#	$(MAKE) mptrap | tail +1 >triptrap/mptrap.diffs
#M#
#M#tests/check.log: $(programs) $(engines)
#M#	$(MAKE) check | tail +1 >tests/check.log
#M#
#M#dist_subdirs = doc lib $(mpware) tests web2c window
#M#pre-dist-$(distname): depend triptrapdiffs tests/check.log tangleboot.p
#M#	cd web2c && $(MAKE) lex.yy.c y_tab.c
#M#	cd doc && $(MAKE) doc dvi
#M#
#M#post-dist-$(distname): 
#M## Make the subdirectories.
#M#	for d in $(dist_subdirs); do \
#M#	  mkdir -p $(texk_distdir)/$(distname)/$$d; done
#M## Link files in subdirectories.
#M#	for f in `find $(dist_subdirs)		\
#M#		       \(    -name README	\
#M#			  -o -name convert	\
#M#			  -o -name ChangeLog	\
#M#			  -o -name 'coerce.*'	\
#M#			  -o -name ref.aux	\
#M#			  -o -name ref.bbl	\
#M#			  -o -name ref.tex	\
#M#			  -o -name ref.txi	\
#M#			  -o -name texinfo.bst	\
#M#			  -o -name web2c.cps	\
#M#			  -o -name web2c.aux	\
#M#			  -o -name '*.asm'	\
#M#			  -o -name '*.[chly]'	\
#M#			  -o -name '*.defines'	\
#M#			  -o -name '*.in'	\
#M#			  -o -name '*.info*'	\
#M#	                  -o -name '*.map'	\
#M#			  -o -name '*.sed'	\
#M#			  -o -name '*.tcx'	\
#M#			  -o -name '*.texi'	\
#M#		       \) -print`; do		\
#M#	  ln $$f $(distdir)/`dirname $$f`; done
#M## Handle the dependeny files in the subdirectories.
#M#	for d in lib $(mpware) web2c window; do \
#M#	  cp -p $$d/depend.mk $(texk_distdir)/$(distname)/$$d; done
#M## Other subdirectories.
#M#	mkdir $(distdir)/triptrap && cd $(distdir)/triptrap && \
#M#	  for i in ../../../../triptrap/*; do \
#M#	    if test -f $$i; then ln -s $$i .; fi; done
#M#	mkdir $(distdir)/tiedir && cd $(distdir)/tiedir && \
#M#	  for i in ../../../../tiedir/*; do \
#M#	    if test -f $$i; then ln -s $$i .; fi; done
#M#	mkdir $(distdir)/ctiedir && cd $(distdir)/ctiedir && \
#M#	  for i in ../../../../ctiedir/*; do \
#M#	    if test -f $$i; then ln -s $$i .; fi; done
#M#	mkdir $(distdir)/cwebdir && cd $(distdir)/cwebdir && \
#M#	  for i in ../../../../cwebdir/*; do \
#M#	    if test -f $$i; then ln -s $$i .; fi; done
#M#	mkdir $(distdir)/cwebdir/examples && cd $(distdir)/cwebdir/examples && \
#M#	  for i in ../../../../cwebdir/examples/*; do \
#M#	    if test -f $$i; then ln -s $$i .; fi; done
#M#	mkdir $(distdir)/man && cd $(distdir)/man && \
#M#	  for i in ../../../../man/*; do \
#M#	    if test -f $$i; then ln -s $$i .; fi; done;
#M#	cd $(distdir)/man && rm -f *.1 Makefile sedscript
#M#	rm -f $(distdir)/window/x11.c
#M#	rm -f $(distdir)/tests/patgen.in
#M#	cd $(distdir)/tests && (rm just.texi; ln -s ../../../../tests/* .; rm -f x* CVS)
#M#	cd $(distdir)/tests && rm -f missfont.log ptmr.mpx io.tex exampl.b??
#M## We supply the flex/bison output in case the user can't generate them.
#M#	cd $(distdir)/web2c; ../../../../../rename 's/$$/-dist/' lex.yy.c y_tab.[ch]
#M## Remove cruft.
#M#	cd $(distdir); rm -f $(addsuffix .c, $(programs) tangleboot)
#M#	cd $(distdir); rm -f $(addsuffix .h, $(programs) tangleboot)
#M#	cd $(distdir); rm -f etex.ch omega.ch aleph.ch
#M#	cd $(distdir); rm -f pdftex.ch
#M#	cd $(distdir); bash -c "rm -f tests/x* tests/allbib.{bbl,blg,dvi,log}"
#M#	cd $(distdir)/tests && ln -s ../../../../tests/xampl.bib .
#M#	cd $(distdir); bash -c "rm -f $(omega_files) alephmem.h"
#M#	cd $(distdir); bash -c "rm -f cweb.c *{coerce,d}.h"
#M#	cd $(distdir); bash -c "rm -f omega*.c aleph*.c"
#M#	cd $(distdir); bash -c "rm -f tex*.c etex*.c"
#M#	cd $(distdir); bash -c "rm -f pdftex*.c"
#M#	cd $(distdir); bash -c "rm -f mf*.c mp*.c"
#M#	cd $(distdir); bash -c "rm -f macnames.c *extra.c"
#M#	touch $(distdir)/doc/*.info*
#M#
#M#web-dist:
#M#	rm -rf $(top_distdir)
#M#	mkdir -p $(distdir)
#M#	for f in *.web; do ln $$f $(distdir); done
#M#	rm -f $(distdir)/etex.web $(distdir)/omega.web $(distdir)/aleph.web
#M#	rm -f $(distdir)/pdfetex.web
#M#	cd $(distdir); bash -c "rm -f $(omega_files)"
#M#	chmod -w $(distdir)/*
#M#	GZIP=-9 tar czf web-$(version).tar.gz $(top_distdir)
#M#	rm -rf $(top_distdir)
#M#
#M#etex-dist: etexdir/etex.version
#M#	rm -rf $(top_distdir)
#M#	mkdir -p $(distdir)/etexdir
#M#	cp -rp etexdir/* $(distdir)/etexdir
#M#	rm -rf $(distdir)/etexdir/CVS $(distdir)/etexdir/*/CVS
#M#	rm -f $(distdir)/etexdir/etexextra.h $(distdir)/etexdir/etex.version
#M#	GZIP=-9 tar czf web2c-$(version)-etex-`cat etexdir/etex.version`.tar.gz $(top_distdir)
#M#	rm -rf $(top_distdir)
#M#
#M#omega-dist:
#M#	rm -rf $(top_distdir)
#M#	mkdir -p $(distdir)/omegadir
#M#	mkdir -p $(distdir)/omegaware $(distdir)/omegafonts $(distdir)/otps
#M#	cp -p omegadir/* $(distdir)/omegadir
#M#	cd omegafonts && $(MAKE) lex.yy.c y_tab.c
#M#	for f in omegafonts/*.[chly] omegafonts/*.in; do cp -p $$f $(distdir)/omegafonts; done
#M#	cp -p omegaware/* $(distdir)/omegaware
#M#	cd otps && $(MAKE) lex.yy.c y_tab.c
#M#	for f in otps/*.[chly] otps/*.in; do cp -p $$f $(distdir)/otps; done
#M#	cp -p otps/mkocp otps/mkofm $(distdir)/otps
#M## We supply the flex/bison output in case the user can't generate them.
#M#	cd $(distdir)/omegafonts; ../../../../../rename 's/$$/-dist/' lex.yy.c y_tab.[ch]
#M#	cd $(distdir)/otps; ../../../../../rename 's/$$/-dist/' lex.yy.c y_tab.[ch]
#M#	GZIP=-9 tar czf web2c-$(version)-omega-`cat omegadir/omega.version`.tar.gz $(top_distdir)
#M#	rm -rf $(top_distdir)
#M#
#M#aleph-dist: alephdir/aleph.version
#M#	rm -rf $(top_distdir)
#M#	mkdir -p $(distdir)/alephdir
#M#	cp -p alephdir/* $(distdir)/alephdir
#M#	@echo "*** Removing generated files ***"
#M#	rm -f $(distdir)/alephdir/alephextra.h
#M#	GZIP=-9 tar czf web2c-$(version)-aleph-`cat alephdir/aleph.version`.tar.gz $(top_distdir)
#M#	rm -rf $(top_distdir)
#M#
#M#pdfetex-dist: pdfetexdir/pdfetex.version
#M#	rm -rf $(top_distdir)
#M#	mkdir -p $(distdir)/pdfetexdir
#M#	cp -rp pdfetexdir/* $(distdir)/pdfetexdir
#M#	rm -rf $(distdir)/pdf*texdir/CVS $(distdir)/pdf*texdir/*/CVS
#M#	rm -f $(distdir)/pdf*texdir/Makefile
#M#	rm -f $(distdir)/pdf*texdir/*.[oa]
#M#	rm -f $(distdir)/pdf*texdir/*/config.*
#M#	rm -f $(distdir)/pdf*texdir/*/Makefile
#M#	rm -f $(distdir)/pdf*texdir/*/*.[oa]
#M#	rm -f $(distdir)/pdf*texdir/*/*/Makefile
#M#	rm -f $(distdir)/pdf*texdir/*/*/*.[ao]
#M#	rm -f $(distdir)/pdf*texdir/*/*/pdftoepdf.cc
#M#	rm -f $(distdir)/pdf*texdir/*/*/epdf.h
#M#	rm -f $(distdir)/pdf*texdir/pdf*texextra.h
#M#	rm -f $(distdir)/pdf*texdir/pdf*tex.version
#M#	mkdir -p $(top_distdir)/libs/xpdf
#M#	cp -rp $(top_srcdir)/../../libs/xpdf/* $(top_distdir)/libs/xpdf
#M#	rm -rf $(top_distdir)/libs/xpdf/CVS $(top_distdir)/libs/xpdf/*/CVS
#M#	rm -f $(top_distdir)/libs/xpdf/Makefile
#M#	rm -f $(top_distdir)/libs/xpdf/config.*
#M#	rm -f $(top_distdir)/libs/xpdf/aconf.h
#M#	rm -f $(top_distdir)/libs/xpdf/*/Makefile
#M#	rm -f $(top_distdir)/libs/xpdf/*/*.[oa]
#M#	rm -f $(top_distdir)/libs/xpdf/*/c-auto.h
#M#	GZIP=-9 tar czf web2c-$(version)-pdftex-`cat pdfetexdir/pdfetex.version`.tar.gz $(top_distdir)
#M#	rm -rf $(top_distdir)
#M#
#M#libs-dist:
#M#	rm -rf $(top_distdir)
#M#	mkdir -p $(libs_distdir)/zlib
#M#	cp -rp $(top_srcdir)/../../libs/zlib/* $(libs_distdir)/zlib
#M#	mkdir -p $(libs_distdir)/libpng
#M#	cp -rp $(top_srcdir)/../../libs/libpng/* $(libs_distdir)/libpng
#M#	mkdir -p $(libs_distdir)/md5
#M#	cp -rp $(top_srcdir)/../../libs/md5/* $(libs_distdir)/md5
#M#	rm -f $(libs_distdir)/*/Makefile
#M#	rm -f $(libs_distdir)/*/config.*
#M#	rm -f $(libs_distdir)/*/c-auto.h
#M#	rm -f $(libs_distdir)/*/*.[oa]
#M#	GZIP=-9 tar czf web2c-$(version)-pdfetexlibs.tar.gz $(top_distdir)
#M#	rm -rf $(top_distdir)

# dist.mk -- making distribution tar files.
#M#top_distdir = $(distname)-$(version)
#M#top_files = RELNOTES Makefile.in configure.in configure selfautofix
#M#libs_distdir = $(top_distdir)/libs
#M#libs_files = EXTRA.LIB configure.in configure
#M#texk_distdir = $(top_distdir)/texk
#M#texk_files = ChangeLog Makefile.in README configure.in configure \
#M#  install.sh libtool.m4 config.guess config.sub ltmain.sh \
#M#  mkinstalldirs add-info-toc rename unbackslsh.awk withenable.ac
#M#distdir = $(texk_distdir)/$(distname)
#M#kpathsea_distdir = ../$(distname)/$(texk_distdir)/kpathsea
#M#ln_files = AUTHORS ChangeLog INSTALL NEWS README *.in *.h *.c \
#M#  configure *.mk
#M#
#M#dist_rm_predicate = -name Makefile
#M#dist: all depend pre-dist-$(distname)
#M#	rm -rf $(top_distdir)*
#M#	mkdir -p $(distdir)
#M#	top_files="$(top_files)"; \
#M#	  for f in $$top_files; do \
#M#	    ln $(top_srcdir)/../../$$f $(top_distdir); done
#M#	cp -pr $(top_srcdir)/../../config $(top_distdir)
#M#	mkdir -p $(libs_distdir)
#M#	libs_files="$(libs_files)"; \
#M#	  for f in $$libs_files; do \
#M#	    ln $(top_srcdir)/../../libs/$$f $(libs_distdir); done
#M#	cd .. && $(MAKE) Makefile ./configure
#M#	cd .. && ln $(texk_files) $(distname)/$(texk_distdir)
#M#	cp -p $(top_srcdir)/../dir $(texk_distdir)
#M#	-ln $(ln_files) $(distdir)
#M#	ln $(program_files) $(distdir)
#M#	cd $(kpathsea_dir); $(MAKE) distdir=$(kpathsea_distdir) \
#M#	  ln_files='$(ln_files)' distdir
#M#	cp -pr ../make ../etc ../djgpp $(texk_distdir)
#M#	rm -rf $(texk_distdir)/make/CVS
#M#	rm -rf $(texk_distdir)/etc/CVS
#M#	rm -rf $(texk_distdir)/etc/autoconf/CVS
#M#	rm -rf $(texk_distdir)/djgpp/CVS
#M## Remove the extra files our patterns got us.
#M#	cd $(texk_distdir); rm -f */c-auto.h
#M#	find $(top_distdir) \( $(dist_rm_predicate) \) -exec rm '{}' \;
#M#	find $(top_distdir) -name \.*texi -exec egrep -ni '	| ::|xx[^}]' \;
#M## Now handle the contrib dir.
#M#	mkdir -p $(texk_distdir)/contrib && \
#M#	  cp -p ../contrib/{ChangeLog,INSTALL,README,*.c,*.h} \
#M#	        $(texk_distdir)/contrib
#M#	$(MAKE) post-dist-$(distname)
#M#	cd $(distdir); test ! -r *.info || touch *.info*
#M#	chmod -R a+rX,u+w $(top_distdir)
#M#	GZIP=-9 tar chzf $(top_distdir).tar.gz $(top_distdir)
#M#	rm -rf $(top_distdir)
# End of dist.mk.

# config.mk -- autoconf rules to remake the Makefile, c-auto.h, etc.
#M## BTW, xt.ac isn't really required for dvipsk or dviljk, but it doesn't
#M## seem worth the trouble.
#M## 
#M#configure_in = $(top_srcdir)/configure.in $(kpathsea_srcdir)/common.ac \
#M#  $(kpathsea_srcdir)/withenable.ac $(kpathsea_srcdir)/xt.ac \
#M#  $(kpathsea_srcdir_parent)/libtool.m4 $(top_srcdir)/../m4/*.m4
#M#
#M#aclocal_m4 = $(top_srcdir)/stamp-aclocal $(top_srcdir)/aclocal.m4
#M#
#M#$(top_srcdir)/stamp-aclocal: $(configure_in)
#M#	cd $(top_srcdir) && aclocal -I ../m4
#M#	date >$(top_srcdir)/stamp-aclocal
#M## For the case that aclocal.m4 is missing
#M#$(top_srcdir)/aclocal.m4:
#M#	cd $(top_srcdir) && aclocal -I ../m4
#M#	date >$(top_srcdir)/stamp-aclocal
#M#
#M#$(top_srcdir)/stamp-configure: $(configure_in) $(aclocal_m4)
#M#	cd $(top_srcdir) && autoconf
#M#	date >$(top_srcdir)/stamp-configure
#M## For the case that configure is missing
#M#$(top_srcdir)/configure:
#M#	cd $(top_srcdir) && autoconf
#M#	date >$(top_srcdir)/stamp-configure
#M#
#M#$(top_srcdir)/c-auto.in: $(top_srcdir)/stamp-auto.in
#M#$(top_srcdir)/stamp-auto.in: $(configure_in) $(aclocal_m4)
#M#	cd $(top_srcdir) && autoheader
#M#	date >$(top_srcdir)/stamp-auto.in

config.status: $(top_srcdir)/stamp-configure $(top_srcdir)/configure
	$(SHELL) $@ --recheck

# FIXME: Shouldn't this be $(top_builddir)/config.status
Makefile: config.status $(srcdir)/Makefile.in $(top_srcdir)/../make/*.mk
	$(SHELL) $<

# This rule isn't used for the top-level Makefile, but it doesn't hurt.
# We don't depend on config.status because configure always rewrites
# config.status, even when it doesn't change. Thus it might be newer
# than c-auto.h when we don't need to remake the latter.
c-auto.h: stamp-auto
stamp-auto: $(srcdir)/c-auto.in
	$(SHELL) config.status
	date >stamp-auto

# End of config.mk.

#M#$(srcdir)/configure: $(srcdir)/withenable.ac

# 

installcheck:
	cd $(srcdir)/tests && bibtex allbib
	mf '\mode:=ljfour; input logo10' && tftopl logo10.tfm >/dev/null
	tex '\nonstopmode \tracingstats=1 \input story \bye'

# 
# Cleaning.
all_subdirs = doc lib man $(mpware) web2c window $(omegafonts) $(otps) \
              $(pdftexdir) $(mpostdir) $(luatexdir) 

# Having a multiple-target rule with the subdir loop fails because of
# the dependencies introduced by clean.mk.  Yet, we want the
# dependencies here at the top level so that distclean will run the
# clean rules, etc.  So, sigh, put the subdir loop in each target and
# only run it if we have a Makefile.  Alternatively, we could do as
# Automake does.

mostlyclean:: tangleboot-clean ctangleboot-clean
	test ! -r lib/Makefile \
	  || for d in $(all_subdirs); do (cd $$d && $(MAKE) $@); done
clean::
	test ! -r lib/Makefile \
	  || for d in $(all_subdirs); do (cd $$d && $(MAKE) $@); done
	rm -f *.log *.fmt *.base *.mem *.fls *.ofl *.aux
distclean::
	test ! -r lib/Makefile \
	  || for d in $(all_subdirs); do (cd $$d && $(MAKE) $@); done
extraclean::
	test ! -r lib/Makefile \
	  || for d in $(all_subdirs); do (cd $$d && $(MAKE) $@); done
maintainer-clean::
	test ! -r lib/Makefile \
	  || for d in $(all_subdirs); do (cd $$d && $(MAKE) $@); done

# clean.mk -- cleaning.
mostlyclean::
	rm -f *.o

clean:: mostlyclean
	-$(LIBTOOL) --mode=clean rm -f $(program) $(programs)
	rm -f $(library).a squeeze *.bad *.dvi *.lj

distclean:: extraclean clean
	rm -f Makefile Makefile.aux
	rm -f config.status config.log config.cache c-auto.h libtool
	rm -rf conftest*
	rm -f stamp-auto stamp-tangle stamp-ctangle
	rm -rf .libs

# Although we can remake configure and c-auto.in, we don't remove
# them, since many people may lack Autoconf.  Use configclean for that.
maintainer-clean:: distclean
	rm -f *.info*

extraclean::
	rm -f *.aux *.bak *.bbl *.blg *.dvi *.log *.pl *.tfm *.vf *.vpl
	rm -f *.*pk *.*gf *.mpx *.i *.s *~ *.orig  *.rej *\#*
	rm -f CONTENTS.tex a.out core mfput.* texput.* mpout.*

configclean:
	rm -f configure c-auto.in c-auto.h stamp-*
# End of clean.mk.

#M#depend::
#M#	for d in lib $(mpware) web2c window $(otps); do \
#M#	  (cd $$d && $(MAKE) depend); done

# rdepend.mk -- rules for remaking the dependencies.  Public domain.
# $Id: rdepend.mk 4681 2007-07-28 23:16:42Z karl $
#M## 
#M## Have to use -M, not -MM, since we use <kpathsea/...> instead of
#M## "kpathsea/..." in the sources.	 But that means we have to remove the
#M## directory prefixes and all the system include files.
#M## And <kpathsea/paths.h> is generated, not part of the distribution.
#M## We also remove any ../texk/kpathsea path component, since that comes
#M## from VPATH when srcdir != builddir.
#M## 
#M## There's no need for any installer/user to ever run this, it can
#M## only cause trouble. So comment it out by default.
#M## 
#M#ifndef c_auto_h_dir
#M#c_auto_h_dir = .
#M#endif
#M#
#M#depend depend.mk:: $(c_auto_h_dir)/c-auto.h \
#M#	 $(top_srcdir)/../make/rdepend.mk 
#M#	$(CC) -M $(ALL_CPPFLAGS) \
#M#		-I$(c_auto_h_dir) \
#M#		-I$(top_srcdir)/../../libs/libgsw32 \
#M#		$(srcdir)/*.c \
#M#	  | sed -e 's,\(\.\./\)\+texk/kpathsea/,,g' \
#M#		-e 's,\(\.\./\)\+kpathsea/,$$(kpathsea_srcdir)/,g' \
#M#		-e 's,$$(kpathsea_srcdir)/c-auto.h,$$(kpathsea_dir)/c-auto.h,g' \
#M#		-e 's,$$(kpathsea_srcdir)/paths.h,$$(kpathsea_dir)/paths.h,g' \
#M#		-e 's, /[^ ]*,,g' \
#M#		-e 's, [^ ]*/\.\./libs/[^ ]*,,g' \
#M#		-e 's, \./, ,g' \
#M#		-e 's,dvi2xx.o,dvilj.o dvilj2p.o dvilj4.o dvilj4l.o,' \
#M#		-e 's,lex.yy,$$(LEX_OUTPUT_ROOT),g' \
#M#	  | $(top_srcdir)/../unbackslsh.awk \
#M#	  >depend.mk
#M## If kpathsea, we're making .lo library objects instead of .o's.
#M#	pwd | grep -v kpathsea >/dev/null \
#M#	  || (sed -e 's/\.o:/.lo:/' \
#M#		  -e 's/kpsewhich.lo:/kpsewhich.o:/' \
#M#		  -e 's/kpsestat.lo:/kpsestat.o:/' \
#M#		  -e 's/access.lo:/access.o:/' \
#M#		  -e 's/readlink.lo:/readlink.o:/' \
#M#	      <depend.mk >depend-tmp.mk; mv depend-tmp.mk depend.mk)
#M#.PHONY: depend

# Let's stick a rule for TAGS here, just in case someone wants them.
# (We don't put them in the distributions, to keep them smaller.)
TAGS: *.c *.h
	pwd | grep kpathsea >/dev/null && append=../kpathsea/TAGS; \
	  etags $$append *.[ch]

# Prevent GNU make 3.[59,63) from overflowing arg limit on system V.
.NOEXPORT:

# End of rdepend.mk.
aleph0.o: aleph0.c alephd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h alephmem.h alephcoerce.h
aleph1.o: aleph1.c alephd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h alephmem.h alephcoerce.h
aleph2.o: aleph2.c alephd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h alephmem.h alephcoerce.h
aleph3.o: aleph3.c alephd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h alephmem.h alephcoerce.h
alephbis.o: alephbis.c \
  alephd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h alephmem.h alephcoerce.h
aleph.o: aleph.c alephd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h alephmem.h alephcoerce.h
alephextra.o: alephextra.c alephd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h alephmem.h alephcoerce.h \
  $(kpathsea_srcdir)/line.h $(kpathsea_srcdir)/readable.h $(kpathsea_srcdir)/variable.h \
  $(kpathsea_srcdir)/absolute.h \
  texmfmp-help.h alephdir/alephextra.h 
alephini.o: alephini.c alephd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h alephmem.h alephcoerce.h
bibtex.o: bibtex.c \
  cpascal.h \
  config.h $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h bibtex.h
ctangleboot.o: ctangleboot.c \
  $(kpathsea_srcdir)/kpathsea.h $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h \
  $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  $(kpathsea_srcdir)/absolute.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/c-dir.h \
  $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/c-namemx.h $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-pathmx.h \
  $(kpathsea_srcdir)/c-stat.h \
  $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/cnf.h $(kpathsea_srcdir)/concatn.h \
  $(kpathsea_srcdir)/db.h $(kpathsea_srcdir)/str-list.h $(kpathsea_srcdir)/default.h \
  $(kpathsea_srcdir)/expand.h $(kpathsea_srcdir)/fn.h $(kpathsea_srcdir)/fontmap.h \
  $(kpathsea_srcdir)/hash.h $(kpathsea_srcdir)/getopt.h $(kpathsea_srcdir)/line.h \
  $(kpathsea_srcdir)/magstep.h $(kpathsea_dir)/paths.h $(kpathsea_srcdir)/pathsearch.h \
  $(kpathsea_srcdir)/str-llist.h $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/readable.h \
  $(kpathsea_srcdir)/tex-file.h $(kpathsea_srcdir)/tex-glyph.h $(kpathsea_srcdir)/tex-hush.h \
  $(kpathsea_srcdir)/tex-make.h $(kpathsea_srcdir)/tilde.h $(kpathsea_srcdir)/truncate.h \
  $(kpathsea_srcdir)/variable.h $(kpathsea_srcdir)/xopendir.h $(kpathsea_srcdir)/xstat.h
ctangle.o: ctangle.c \
  $(kpathsea_srcdir)/kpathsea.h $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h \
  $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  $(kpathsea_srcdir)/absolute.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/c-dir.h \
  $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/c-namemx.h $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-pathmx.h \
  $(kpathsea_srcdir)/c-stat.h \
  $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/cnf.h $(kpathsea_srcdir)/concatn.h \
  $(kpathsea_srcdir)/db.h $(kpathsea_srcdir)/str-list.h $(kpathsea_srcdir)/default.h \
  $(kpathsea_srcdir)/expand.h $(kpathsea_srcdir)/fn.h $(kpathsea_srcdir)/fontmap.h \
  $(kpathsea_srcdir)/hash.h $(kpathsea_srcdir)/getopt.h $(kpathsea_srcdir)/line.h \
  $(kpathsea_srcdir)/magstep.h $(kpathsea_dir)/paths.h $(kpathsea_srcdir)/pathsearch.h \
  $(kpathsea_srcdir)/str-llist.h $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/readable.h \
  $(kpathsea_srcdir)/tex-file.h $(kpathsea_srcdir)/tex-glyph.h $(kpathsea_srcdir)/tex-hush.h \
  $(kpathsea_srcdir)/tex-make.h $(kpathsea_srcdir)/tilde.h $(kpathsea_srcdir)/truncate.h \
  $(kpathsea_srcdir)/variable.h $(kpathsea_srcdir)/xopendir.h $(kpathsea_srcdir)/xstat.h
ctie.o: ctie.c \
  $(kpathsea_srcdir)/kpathsea.h $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h \
  $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  $(kpathsea_srcdir)/absolute.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/c-dir.h \
  $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/c-namemx.h $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-pathmx.h \
  $(kpathsea_srcdir)/c-stat.h \
  $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/cnf.h $(kpathsea_srcdir)/concatn.h \
  $(kpathsea_srcdir)/db.h $(kpathsea_srcdir)/str-list.h $(kpathsea_srcdir)/default.h \
  $(kpathsea_srcdir)/expand.h $(kpathsea_srcdir)/fn.h $(kpathsea_srcdir)/fontmap.h \
  $(kpathsea_srcdir)/hash.h $(kpathsea_srcdir)/getopt.h $(kpathsea_srcdir)/line.h \
  $(kpathsea_srcdir)/magstep.h $(kpathsea_dir)/paths.h $(kpathsea_srcdir)/pathsearch.h \
  $(kpathsea_srcdir)/str-llist.h $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/readable.h \
  $(kpathsea_srcdir)/tex-file.h $(kpathsea_srcdir)/tex-glyph.h $(kpathsea_srcdir)/tex-hush.h \
  $(kpathsea_srcdir)/tex-make.h $(kpathsea_srcdir)/tilde.h $(kpathsea_srcdir)/truncate.h \
  $(kpathsea_srcdir)/variable.h $(kpathsea_srcdir)/xopendir.h $(kpathsea_srcdir)/xstat.h
cweave.o: cweave.c \
  $(kpathsea_srcdir)/kpathsea.h $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h \
  $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  $(kpathsea_srcdir)/absolute.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/c-dir.h \
  $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/c-namemx.h $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-pathmx.h \
  $(kpathsea_srcdir)/c-stat.h \
  $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/cnf.h $(kpathsea_srcdir)/concatn.h \
  $(kpathsea_srcdir)/db.h $(kpathsea_srcdir)/str-list.h $(kpathsea_srcdir)/default.h \
  $(kpathsea_srcdir)/expand.h $(kpathsea_srcdir)/fn.h $(kpathsea_srcdir)/fontmap.h \
  $(kpathsea_srcdir)/hash.h $(kpathsea_srcdir)/getopt.h $(kpathsea_srcdir)/line.h \
  $(kpathsea_srcdir)/magstep.h $(kpathsea_dir)/paths.h $(kpathsea_srcdir)/pathsearch.h \
  $(kpathsea_srcdir)/str-llist.h $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/readable.h \
  $(kpathsea_srcdir)/tex-file.h $(kpathsea_srcdir)/tex-glyph.h $(kpathsea_srcdir)/tex-hush.h \
  $(kpathsea_srcdir)/tex-make.h $(kpathsea_srcdir)/tilde.h $(kpathsea_srcdir)/truncate.h \
  $(kpathsea_srcdir)/variable.h $(kpathsea_srcdir)/xopendir.h $(kpathsea_srcdir)/xstat.h
cwebboot.o: cwebboot.c \
  cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h \
  $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/kpathsea.h $(kpathsea_srcdir)/absolute.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/c-dir.h \
  $(kpathsea_srcdir)/c-namemx.h $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-pathmx.h \
  $(kpathsea_srcdir)/c-stat.h \
  $(kpathsea_srcdir)/cnf.h $(kpathsea_srcdir)/concatn.h $(kpathsea_srcdir)/db.h \
  $(kpathsea_srcdir)/str-list.h $(kpathsea_srcdir)/default.h $(kpathsea_srcdir)/expand.h \
  $(kpathsea_srcdir)/fn.h $(kpathsea_srcdir)/fontmap.h $(kpathsea_srcdir)/hash.h \
  $(kpathsea_srcdir)/line.h $(kpathsea_srcdir)/magstep.h $(kpathsea_dir)/paths.h \
  $(kpathsea_srcdir)/pathsearch.h $(kpathsea_srcdir)/str-llist.h $(kpathsea_srcdir)/readable.h \
  $(kpathsea_srcdir)/tex-glyph.h $(kpathsea_srcdir)/tex-hush.h $(kpathsea_srcdir)/tex-make.h \
  $(kpathsea_srcdir)/tilde.h $(kpathsea_srcdir)/truncate.h $(kpathsea_srcdir)/variable.h \
  $(kpathsea_srcdir)/xopendir.h $(kpathsea_srcdir)/xstat.h
cweb.o: cweb.c \
  cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h \
  $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/kpathsea.h $(kpathsea_srcdir)/absolute.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/c-dir.h \
  $(kpathsea_srcdir)/c-namemx.h $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-pathmx.h \
  $(kpathsea_srcdir)/c-stat.h \
  $(kpathsea_srcdir)/cnf.h $(kpathsea_srcdir)/concatn.h $(kpathsea_srcdir)/db.h \
  $(kpathsea_srcdir)/str-list.h $(kpathsea_srcdir)/default.h $(kpathsea_srcdir)/expand.h \
  $(kpathsea_srcdir)/fn.h $(kpathsea_srcdir)/fontmap.h $(kpathsea_srcdir)/hash.h \
  $(kpathsea_srcdir)/line.h $(kpathsea_srcdir)/magstep.h $(kpathsea_dir)/paths.h \
  $(kpathsea_srcdir)/pathsearch.h $(kpathsea_srcdir)/str-llist.h $(kpathsea_srcdir)/readable.h \
  $(kpathsea_srcdir)/tex-glyph.h $(kpathsea_srcdir)/tex-hush.h $(kpathsea_srcdir)/tex-make.h \
  $(kpathsea_srcdir)/tilde.h $(kpathsea_srcdir)/truncate.h $(kpathsea_srcdir)/variable.h \
  $(kpathsea_srcdir)/xopendir.h $(kpathsea_srcdir)/xstat.h
dvicopy.o: dvicopy.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h dvicopy.h
dvitomp.o: dvitomp.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h dvitomp.h
dvitype.o: dvitype.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h dvitype.h
gftodvi.o: gftodvi.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h gftodmem.h \
  gftodvi.h
gftopk.o: gftopk.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h gftopk.h
gftype.o: gftype.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h gftype.h
macnames.o: macnames.c
mf0.o: mf0.c mfd.h texmfmp.h cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h mfcoerce.h
mf1.o: mf1.c mfd.h texmfmp.h cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h mfcoerce.h
mfextra.o: mfextra.c mfd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h mfcoerce.h $(kpathsea_srcdir)/line.h \
  $(kpathsea_srcdir)/readable.h $(kpathsea_srcdir)/variable.h $(kpathsea_srcdir)/absolute.h \
  texmfmp-help.h lib/mfmpi386.asm
mfini.o: mfini.c mfd.h texmfmp.h cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h mfcoerce.h
mfnowin.o: mfnowin.c mfd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h mfcoerce.h $(kpathsea_srcdir)/line.h \
  $(kpathsea_srcdir)/readable.h $(kpathsea_srcdir)/variable.h $(kpathsea_srcdir)/absolute.h \
  texmfmp-help.h lib/mfmpi386.asm
mft.o: mft.c cpascal.h config.h $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h \
  $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h mft.h
mp0.o: mp0.c mpd.h texmfmp.h cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h mpcoerce.h
mp1.o: mp1.c mpd.h texmfmp.h cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h mpcoerce.h
mp2.o: mp2.c mpd.h texmfmp.h cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h mpcoerce.h
mpextra.o: mpextra.c mpd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h mpcoerce.h $(kpathsea_srcdir)/line.h \
  $(kpathsea_srcdir)/readable.h $(kpathsea_srcdir)/variable.h $(kpathsea_srcdir)/absolute.h \
  texmfmp-help.h $(kpathsea_srcdir)/concatn.h lib/mfmpi386.asm
mpini.o: mpini.c mpd.h texmfmp.h cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h mpcoerce.h
odvicopy.o: odvicopy.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h odvicopy.h
odvitype.o: odvitype.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h odvitype.h
omega0.o: omega0.c omegad.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h omegamem.h omegacoerce.h
omega1.o: omega1.c omegad.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h omegamem.h omegacoerce.h
omega2.o: omega2.c omegad.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h omegamem.h omegacoerce.h
omega3.o: omega3.c omegad.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h omegamem.h omegacoerce.h
omegabis.o: omegabis.c \
  omegad.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h $(kpathsea_srcdir)/c-minmax.h \
  $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h omegamem.h omegacoerce.h
omega.o: omega.c omegad.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h omegamem.h omegacoerce.h
omegaextra.o: omegaextra.c omegad.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h omegamem.h omegacoerce.h \
  $(kpathsea_srcdir)/line.h $(kpathsea_srcdir)/readable.h $(kpathsea_srcdir)/variable.h \
  $(kpathsea_srcdir)/absolute.h \
  texmfmp-help.h omegadir/omegaextra.h 
omegaini.o: omegaini.c omegad.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h omegamem.h omegacoerce.h
otangle.o: otangle.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h otangle.h
patgen.o: patgen.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h patgen.h
pdfetex0.o: pdfetex0.c pdfetexd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h pdfetexcoerce.h pdfetexdir/pdfetex.h \
  pdftexdir/ptexlib.h pdftexdir/ptexmac.h
pdfetex1.o: pdfetex1.c pdfetexd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h pdfetexcoerce.h pdfetexdir/pdfetex.h \
  pdftexdir/ptexlib.h pdftexdir/ptexmac.h
pdfetex2.o: pdfetex2.c pdfetexd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h pdfetexcoerce.h pdfetexdir/pdfetex.h \
  pdftexdir/ptexlib.h pdftexdir/ptexmac.h
pdfetex3.o: pdfetex3.c pdfetexd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h pdfetexcoerce.h pdfetexdir/pdfetex.h \
  pdftexdir/ptexlib.h pdftexdir/ptexmac.h
pdfetexextra.o: pdfetexextra.c pdfetexd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h pdfetexcoerce.h pdfetexdir/pdfetex.h \
  pdftexdir/ptexlib.h pdftexdir/ptexmac.h $(kpathsea_srcdir)/line.h \
  $(kpathsea_srcdir)/readable.h $(kpathsea_srcdir)/variable.h $(kpathsea_srcdir)/absolute.h \
  texmfmp-help.h pdfetexdir/pdfetexextra.h 
pdfetexini.o: pdfetexini.c pdfetexd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h pdfetexcoerce.h pdfetexdir/pdfetex.h \
  pdftexdir/ptexlib.h pdftexdir/ptexmac.h
pdftex0.o: pdftex0.c pdftexd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h pdftexcoerce.h pdftexdir/pdftex.h \
  pdftexdir/ptexlib.h pdftexdir/ptexmac.h
pdftex1.o: pdftex1.c pdftexd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h pdftexcoerce.h pdftexdir/pdftex.h \
  pdftexdir/ptexlib.h pdftexdir/ptexmac.h
pdftex2.o: pdftex2.c pdftexd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h pdftexcoerce.h pdftexdir/pdftex.h \
  pdftexdir/ptexlib.h pdftexdir/ptexmac.h
pdftex3.o: pdftex3.c pdftexd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h pdftexcoerce.h pdftexdir/pdftex.h \
  pdftexdir/ptexlib.h pdftexdir/ptexmac.h
pdftexini.o: pdftexini.c pdftexd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h pdftexcoerce.h pdftexdir/pdftex.h \
  pdftexdir/ptexlib.h pdftexdir/ptexmac.h
pktogf.o: pktogf.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h pktogf.h
pktype.o: pktype.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h pktype.h
pltotf.o: pltotf.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h pltotf.h
pooltype.o: pooltype.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h pooltype.h
tangleboot.o: tangleboot.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h tangleboot.h
tangle.o: tangle.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h tangle.h
tex0.o: tex0.c texd.h texmfmp.h cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h texcoerce.h
tex1.o: tex1.c texd.h texmfmp.h cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h texcoerce.h
tex2.o: tex2.c texd.h texmfmp.h cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h texcoerce.h
texextra.o: texextra.c texd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h texcoerce.h $(kpathsea_srcdir)/line.h \
  $(kpathsea_srcdir)/readable.h $(kpathsea_srcdir)/variable.h $(kpathsea_srcdir)/absolute.h \
  texmfmp-help.h 
texini.o: texini.c texd.h texmfmp.h cpascal.h config.h \
  $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h \
  $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/tex-make.h texmfmem.h texcoerce.h
tftopl.o: tftopl.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h tftopl.h
tie.o: tie.c cpascal.h config.h $(kpathsea_srcdir)/config.h $(kpathsea_dir)/c-auto.h \
  $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h
ttf2afm.o: ttf2afm.c $(kpathsea_srcdir)/kpathsea.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  $(kpathsea_srcdir)/absolute.h $(kpathsea_srcdir)/c-ctype.h \
  $(kpathsea_srcdir)/c-dir.h \
  $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/c-namemx.h $(kpathsea_srcdir)/c-pathch.h $(kpathsea_srcdir)/c-pathmx.h \
  $(kpathsea_srcdir)/c-stat.h \
  $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/cnf.h $(kpathsea_srcdir)/concatn.h \
  $(kpathsea_srcdir)/db.h $(kpathsea_srcdir)/str-list.h $(kpathsea_srcdir)/default.h \
  $(kpathsea_srcdir)/expand.h $(kpathsea_srcdir)/fn.h $(kpathsea_srcdir)/fontmap.h \
  $(kpathsea_srcdir)/hash.h $(kpathsea_srcdir)/getopt.h $(kpathsea_srcdir)/line.h \
  $(kpathsea_srcdir)/magstep.h $(kpathsea_dir)/paths.h $(kpathsea_srcdir)/pathsearch.h \
  $(kpathsea_srcdir)/str-llist.h $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/readable.h \
  $(kpathsea_srcdir)/tex-file.h $(kpathsea_srcdir)/tex-glyph.h $(kpathsea_srcdir)/tex-hush.h \
  $(kpathsea_srcdir)/tex-make.h $(kpathsea_srcdir)/tilde.h $(kpathsea_srcdir)/truncate.h \
  $(kpathsea_srcdir)/variable.h $(kpathsea_srcdir)/xopendir.h $(kpathsea_srcdir)/xstat.h \
  pdftexdir/ptexmac.h pdftexdir/writettf.h \
  macnames.c
vftovp.o: vftovp.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h vftovp.h
vptovf.o: vptovf.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h vptovf.h
weave.o: weave.c cpascal.h config.h $(kpathsea_srcdir)/config.h \
  $(kpathsea_dir)/c-auto.h $(kpathsea_srcdir)/c-std.h \
  $(kpathsea_srcdir)/c-unistd.h $(kpathsea_srcdir)/systypes.h \
  $(kpathsea_srcdir)/c-memstr.h \
  $(kpathsea_srcdir)/c-errno.h \
  $(kpathsea_srcdir)/c-minmax.h $(kpathsea_srcdir)/c-limits.h \
  $(kpathsea_srcdir)/c-proto.h $(kpathsea_srcdir)/debug.h \
  $(kpathsea_srcdir)/types.h $(kpathsea_srcdir)/lib.h $(kpathsea_srcdir)/progname.h \
  ../web2c/c-auto.h $(kpathsea_srcdir)/c-vararg.h $(kpathsea_srcdir)/c-fopen.h \
  $(kpathsea_srcdir)/getopt.h \
  $(kpathsea_srcdir)/proginit.h $(kpathsea_srcdir)/tex-file.h help.h weave.h

# 
# Local variables:
# page-delimiter: "^# \f"
# End:
